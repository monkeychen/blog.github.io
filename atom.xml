<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Simiam</title>
  <subtitle>求知若渴，虚怀若谷</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://cloudnoter.com/"/>
  <updated>2017-10-10T15:31:19.000Z</updated>
  <id>http://cloudnoter.com/</id>
  
  <author>
    <name>simiam</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于Spring的动态多数据源组件使用文档</title>
    <link href="http://cloudnoter.com/2017/09/11/%E5%9F%BA%E4%BA%8ESpring%E7%9A%84%E5%8A%A8%E6%80%81%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E7%BB%84%E4%BB%B6%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/"/>
    <id>http://cloudnoter.com/2017/09/11/基于Spring的动态多数据源组件使用文档/</id>
    <published>2017-09-10T23:35:26.000Z</published>
    <updated>2017-10-10T15:31:19.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设计目标"><a href="#设计目标" class="headerlink" title="设计目标"></a>设计目标</h2><ul>
<li>无须定义繁琐的配置信息，使用方只需要提供基本的JDBC连接参数即可</li>
<li>与spring框架无缝集成</li>
<li>默认使用Druid数据库连接池，但支持自定义扩展（可以使用其他数据库连接池）</li>
</ul>
<h2 id="技术原理"><a href="#技术原理" class="headerlink" title="技术原理"></a>技术原理</h2><p>本组件是在spring框架提供的各种特性的基础上进行开发的，具体如下：</p>
<ul>
<li>抽象的数据源路由类：<code>AbstractRoutingDataSource</code></li>
<li>基于AOP及注解实现数据源动态切换</li>
</ul>
<h2 id="关键类图"><a href="#关键类图" class="headerlink" title="关键类图"></a>关键类图</h2><h2 id="参数资料-SpringBoot配置文件加载顺序及属性优先级"><a href="#参数资料-SpringBoot配置文件加载顺序及属性优先级" class="headerlink" title="参数资料:SpringBoot配置文件加载顺序及属性优先级"></a>参数资料:SpringBoot配置文件加载顺序及属性优先级</h2><p>参考：<a href="http://www.importnew.com/17673.html" target="_blank" rel="external">http://www.importnew.com/17673.html</a><br><a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/htmlsingle/#resources" target="_blank" rel="external">https://docs.spring.io/spring/docs/current/spring-framework-reference/htmlsingle/#resources</a></p>
<p><code>file:./config/ -&gt; file:./ -&gt; classpath:/config/ -&gt; classpath:/</code></p>
<p>如果各个目录下都有相同的配置文件（如<code>application.properties</code>），则都会被加载进来（即不互斥），但如果多个jar包的相同路径下都存在一样的配置文件，则只会加载第一个匹配的文件（具体由classloader的加载顺序决定）；如果每个文件中都包含相同的key，则最左边文件中的key具有最高的优先级，从源码注释也可证明这一点：</p>
<figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// ConfigFileApplicationListener中的描述：</span></div><div class="line"><span class="comment">// Note the order is from least to most specific (last one wins)</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> DEFAULT_SEARCH_LOCATIONS = <span class="string">"classpath:/,classpath:/config/,file:./,file:./config/"</span>;</div><div class="line">	</div><div class="line"><span class="comment">// ConfigFileApplicationListener.Loader类获取配置文件加载位置：</span></div><div class="line"><span class="keyword">private</span> Set&lt;<span class="keyword">String</span>&gt; getSearchLocations() &#123;</div><div class="line">	Set&lt;<span class="keyword">String</span>&gt; locations = <span class="keyword">new</span> LinkedHashSet&lt;<span class="keyword">String</span>&gt;();</div><div class="line">	<span class="comment">// User-configured settings take precedence, so we do them first</span></div><div class="line">	<span class="keyword">if</span> (<span class="keyword">this</span>.environment.containsProperty(CONFIG_LOCATION_PROPERTY)) &#123;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">String</span> path : asResolvedSet(</div><div class="line">				<span class="keyword">this</span>.environment.getProperty(CONFIG_LOCATION_PROPERTY), <span class="keyword">null</span>)) &#123;</div><div class="line">			<span class="keyword">if</span> (!path.contains(<span class="string">"$"</span>)) &#123;</div><div class="line">				path = StringUtils.cleanPath(path);</div><div class="line">				<span class="keyword">if</span> (!ResourceUtils.isUrl(path)) &#123;</div><div class="line">					path = ResourceUtils.FILE_URL_PREFIX + path;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			locations.<span class="built_in">add</span>(path);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	locations.addAll(</div><div class="line">			asResolvedSet(ConfigFileApplicationListener.<span class="keyword">this</span>.searchLocations,</div><div class="line">					DEFAULT_SEARCH_LOCATIONS));</div><div class="line">	<span class="keyword">return</span> locations;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>转载请注明出处：<a href="http://cloudnoter.com">cloudnoter.com</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;设计目标&quot;&gt;&lt;a href=&quot;#设计目标&quot; class=&quot;headerlink&quot; title=&quot;设计目标&quot;&gt;&lt;/a&gt;设计目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;无须定义繁琐的配置信息，使用方只需要提供基本的JDBC连接参数即可&lt;/li&gt;
&lt;li&gt;与spring框架无缝集成
    
    </summary>
    
      <category term="Java" scheme="http://cloudnoter.com/categories/Java/"/>
    
    
      <category term="Spring" scheme="http://cloudnoter.com/tags/Spring/"/>
    
      <category term="SpringBoot" scheme="http://cloudnoter.com/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>《推荐系统实践》笔记--好的推荐系统</title>
    <link href="http://cloudnoter.com/2017/05/16/%E3%80%8A%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%B7%B5%E3%80%8B%E7%AC%94%E8%AE%B0-%E5%A5%BD%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    <id>http://cloudnoter.com/2017/05/16/《推荐系统实践》笔记-好的推荐系统/</id>
    <published>2017-05-15T21:50:34.000Z</published>
    <updated>2017-05-15T14:33:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是推荐系统"><a href="#什么是推荐系统" class="headerlink" title="什么是推荐系统"></a>什么是推荐系统</h2><p>建立用户与物品之间的联系：在用户没有明确目的的情况下帮助他们发现感兴趣的物品；为物品找到可能对它们感兴趣的用户。</p>
<h2 id="个性化推荐系统的应用"><a href="#个性化推荐系统的应用" class="headerlink" title="个性化推荐系统的应用"></a>个性化推荐系统的应用</h2><p>个性化推荐的成功应用需要两个条件：</p>
<blockquote>
<ul>
<li>存在信息过载</li>
<li>用户大部分时候没有特别明确的需求</li>
</ul>
</blockquote>
<ol>
<li>电子商务：Amazon、阿里</li>
<li>电影和视频网站：Netflix、Youtube</li>
<li>个性化音乐网络电台：Pandora、Last.fm、豆瓣电台<ul>
<li>个性化音乐推荐的特点<ul>
<li>物品空间大（相对书与电影而言）</li>
<li>消费每首歌的代价很小</li>
<li>物品种类丰富</li>
<li>听一首歌耗时很少</li>
<li>物品重用率很高（每首歌用户会听很多遍）</li>
<li>用户充满激情</li>
<li>上下文相关</li>
<li>次序很重要</li>
<li>很多播放列表资源</li>
<li>不需要用户全神贯注</li>
<li>高度社会化</li>
</ul>
</li>
</ul>
</li>
<li>社交网络：Facebook、twitter、weixin、weibo</li>
<li>个性化阅读：GoogleReader、Flipboard、Zite、Digg</li>
<li>基于位置的服务（LBS）</li>
<li>个性化邮件</li>
<li>个性化广告<ul>
<li>个性化广告投放技术分三种<ul>
<li>上下文广告：如google的Adsense</li>
<li>搜索广告</li>
<li>个性化展示广告：如雅虎</li>
</ul>
</li>
</ul>
</li>
</ol>
<blockquote>
<p>延伸阅读：</p>
<ul>
<li>Pandora研究人员<a href="http://www.slideshare.net/plamere/music-recommendation-and-discovery" target="_blank" rel="external">关于音乐个性化推荐的演讲PPT</a></li>
<li>搜索雅虎公司发表的与个性化广告有关的论文</li>
</ul>
</blockquote>
<a id="more"></a>
<h2 id="推荐系统评测"><a href="#推荐系统评测" class="headerlink" title="推荐系统评测"></a>推荐系统评测</h2><p>一个完整的推荐系统的参与者：用户、物品提供者、提供推荐系统的网站。在评测一个推荐算法时，需要同时考虑三方的利益，一个好的推荐系统是能够令三方共赢的系统。好的推荐系统不但能够准确预测用户的行为，而且能够扩展用户的视野，帮助用户发现那些他们可能会感兴趣，但却不那么容易发现的东西。同时，推荐系统不要能够帮助商家将那些被埋没在长尾中的好商品介绍给可能会对它们感兴趣的用户。</p>
<h3 id="推荐系统实验方法"><a href="#推荐系统实验方法" class="headerlink" title="推荐系统实验方法"></a>推荐系统实验方法</h3><ol>
<li>离线实验</li>
<li>用户调查</li>
<li>在线实验</li>
</ol>
<p>一般来说，一个新的推荐算法最终上线，需要完成上面所说的三个实验：</p>
<ul>
<li>首先，需要通过离线实验证明它在很多离线指标上优于现有的算法。</li>
<li>然后，需要通过用户调查确定它的用户满意度不低于现有算法。</li>
<li>最后，通过在线的AB测试确定它在我们关心的指标上优于现有的算法。</li>
</ul>
<h3 id="评测指标"><a href="#评测指标" class="headerlink" title="评测指标"></a>评测指标</h3><ol>
<li>用户满意度</li>
<li><p>预测准确度：最重要的离线评测指标，根据离线推荐算法的不同研究方向，有相应更具体的预测准确度指标。</p>
<ul>
<li>评分预测：预测用户对物品评分的行为称为评分预测。评分预测的预测准确率一般通过均方根误差（RMSE）、平均绝对误差（MAE）计算。<br>$$RMSE=\sqrt{\frac{\sum_{u,i \in T}(r_{ui} - \hat{r}_{ui})^2}{|T|}}$$<br>$$MAE=\frac{\sum_{u,i \in T}|r_{ui} - \hat{r}_{ui}|}{|T|}$$</li>
<li>TopN推荐：网站在提供推荐服务时，一般是给用户一个个性化的推荐列表，这种推荐称为TopN推荐。TopN推荐的预测准确率一般通过<code>准确率(precision)/召回率(recall)</code>度量。<br>$$Recall=\frac{\sum_{u \in U}|R(u) \cap T(u)|}{\sum_{u \in U}|T(u)|}$$<br>$$Precision=\frac{\sum_{u \in U}|R(u) \cap T(u)|}{\sum_{u \in U}|R(u)|}$$</li>
</ul>
</li>
<li><p>覆盖率：描述一个推荐系统对物品长尾的发掘能力。覆盖率有不同的定义，最简单的定义为推荐系统能够推荐出来的物品占总物品集合的比例。<br>$$Coverage=\frac{|\bigcup_{u \in U}R(u)|}{|I|}$$<br>上面的定义过于粗略，在信息论与经济学中有两个著名的指标可以用来定义覆盖率，第一个是信息熵：<br>$$H=-\sum_{i=1}^{n}p(i)\log_{2}p(i)$$这里的p(i)是物品i的流行度除以所有商品流行度之和。第二个指标是基尼系数(Gini Index)：<br>$$G=\frac{1}{n - 1} \sum_{j=1}^{n}(2j - n - 1)p(i_j)$$这里$i_j$是按照物品流行度p()从小到大排序的物品列表中第j个物品。</p>
</li>
<li><p>多样性：<br>用户u的推荐列表的多样性的计算公式：<br>$$Diversity(R(u))=1 - \frac{\sum_{i,j \in R(u), i \neq j}s(i,j)}{\frac{1}{2}|R(u)|(|R(u)| - 1)}$$<br>推荐系统的整体多样性的计算公式：<br>$$Diversity=\frac{1}{|U|}\sum_{u \in U}Diversity(R(u))$$</p>
</li>
<li><p>新颖性</p>
</li>
<li>惊喜度</li>
<li>信任度</li>
<li>实时性</li>
<li>健壮性</li>
<li>商业目标</li>
</ol>
<p>获取各种评测指标的途径如下表：</p>
<table>
<thead>
<tr>
<th style="text-align:center">-</th>
<th style="text-align:center">离线实验</th>
<th style="text-align:center">问卷调查</th>
<th style="text-align:center">在线实验</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">用户满意度</td>
<td style="text-align:center">N</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">O</td>
</tr>
<tr>
<td style="text-align:center">预测准确度</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">N</td>
</tr>
<tr>
<td style="text-align:center">覆盖率</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
</tr>
<tr>
<td style="text-align:center">多样性</td>
<td style="text-align:center">O</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">O</td>
</tr>
<tr>
<td style="text-align:center">新颖性</td>
<td style="text-align:center">O</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">O</td>
</tr>
<tr>
<td style="text-align:center">惊喜度</td>
<td style="text-align:center">N</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">N</td>
</tr>
</tbody>
</table>
<h3 id="评测维度"><a href="#评测维度" class="headerlink" title="评测维度"></a>评测维度</h3><p>比如一个推荐算法虽然整体上性能不好，但可能在某种特定场景下性能比较好，而增加评测维度的目的就是为了知道一个算法在什么情况下性能最好。这样可以为融合不同推荐算法取得最好的整体性能带来参考。</p>
<ul>
<li>用户维度：主要包括用户的人口统计学信息、活跃度以及是不是新用户等。</li>
<li>物品维度：包括物品的属性信息、流行度、平均分以及是不是新加入的物品等。</li>
<li>时间维度：包括季节，是工作日还是周末，是白天还是晚上等。</li>
</ul>
<p>在推荐系统评测报告中包含不同维度下的系统评测指标，就能帮助我们全面地了解推荐系统性能，力争在弱势算法中找优点，优势算法中找缺点。</p>
<h2 id="进一步阅读"><a href="#进一步阅读" class="headerlink" title="进一步阅读"></a>进一步阅读</h2><ol>
<li>O’scar Celma的博士论文：<a href="http://mtg.upf.edu/static/media/PhD_ocelma.pdf" target="_blank" rel="external">Music Recommendation and Discovery in the Long Tail</a></li>
<li>ACM的推荐系统会议在2011年有一个专门的研讨会<a href="http://ir.ii.uam.es/divers2011" target="_blank" rel="external">讨论推荐的多样性与新颖性</a></li>
<li>惊喜度相关论文：<a href="http://www.cs.ucl.ac.uk/fileadmin/UCL-CS/research/Research_Notes/RN_11_21.pdf" target="_blank" rel="external">Auralist: Introducing Serendipity into Music Recommendation</a>，<a href="https://philpapers.org/rec/MURMFE" target="_blank" rel="external">Metrics for evaluating the serendipity of recommendation lists</a>，<a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.464.8494&amp;rep=rep1&amp;type=pdf" target="_blank" rel="external">Evaluating Recommender Systems by Coverage and Serendipity</a></li>
<li>关于<a href="https://wenku.baidu.com/view/fc422cf40242a8956bece479.html?re=view" target="_blank" rel="external">推荐系统健壮性的教程</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是推荐系统&quot;&gt;&lt;a href=&quot;#什么是推荐系统&quot; class=&quot;headerlink&quot; title=&quot;什么是推荐系统&quot;&gt;&lt;/a&gt;什么是推荐系统&lt;/h2&gt;&lt;p&gt;建立用户与物品之间的联系：在用户没有明确目的的情况下帮助他们发现感兴趣的物品；为物品找到可能对它们感兴趣的用户。&lt;/p&gt;
&lt;h2 id=&quot;个性化推荐系统的应用&quot;&gt;&lt;a href=&quot;#个性化推荐系统的应用&quot; class=&quot;headerlink&quot; title=&quot;个性化推荐系统的应用&quot;&gt;&lt;/a&gt;个性化推荐系统的应用&lt;/h2&gt;&lt;p&gt;个性化推荐的成功应用需要两个条件：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;存在信息过载&lt;/li&gt;
&lt;li&gt;用户大部分时候没有特别明确的需求&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;电子商务：Amazon、阿里&lt;/li&gt;
&lt;li&gt;电影和视频网站：Netflix、Youtube&lt;/li&gt;
&lt;li&gt;个性化音乐网络电台：Pandora、Last.fm、豆瓣电台&lt;ul&gt;
&lt;li&gt;个性化音乐推荐的特点&lt;ul&gt;
&lt;li&gt;物品空间大（相对书与电影而言）&lt;/li&gt;
&lt;li&gt;消费每首歌的代价很小&lt;/li&gt;
&lt;li&gt;物品种类丰富&lt;/li&gt;
&lt;li&gt;听一首歌耗时很少&lt;/li&gt;
&lt;li&gt;物品重用率很高（每首歌用户会听很多遍）&lt;/li&gt;
&lt;li&gt;用户充满激情&lt;/li&gt;
&lt;li&gt;上下文相关&lt;/li&gt;
&lt;li&gt;次序很重要&lt;/li&gt;
&lt;li&gt;很多播放列表资源&lt;/li&gt;
&lt;li&gt;不需要用户全神贯注&lt;/li&gt;
&lt;li&gt;高度社会化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;社交网络：Facebook、twitter、weixin、weibo&lt;/li&gt;
&lt;li&gt;个性化阅读：GoogleReader、Flipboard、Zite、Digg&lt;/li&gt;
&lt;li&gt;基于位置的服务（LBS）&lt;/li&gt;
&lt;li&gt;个性化邮件&lt;/li&gt;
&lt;li&gt;个性化广告&lt;ul&gt;
&lt;li&gt;个性化广告投放技术分三种&lt;ul&gt;
&lt;li&gt;上下文广告：如google的Adsense&lt;/li&gt;
&lt;li&gt;搜索广告&lt;/li&gt;
&lt;li&gt;个性化展示广告：如雅虎&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;延伸阅读：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pandora研究人员&lt;a href=&quot;http://www.slideshare.net/plamere/music-recommendation-and-discovery&quot;&gt;关于音乐个性化推荐的演讲PPT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;搜索雅虎公司发表的与个性化广告有关的论文&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="读书" scheme="http://cloudnoter.com/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="推荐系统" scheme="http://cloudnoter.com/tags/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>ZooKeeper Administrator&#39;s Guide中文版</title>
    <link href="http://cloudnoter.com/2017/05/08/ZooKeeper-Administrator-s-Guide%E4%B8%AD%E6%96%87%E7%89%88/"/>
    <id>http://cloudnoter.com/2017/05/08/ZooKeeper-Administrator-s-Guide中文版/</id>
    <published>2017-05-07T19:03:24.000Z</published>
    <updated>2017-05-13T15:28:29.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文档主要介绍ZooKeeper部署及日常管理</p>
</blockquote>
<h2 id="安装部署"><a href="#安装部署" class="headerlink" title="安装部署"></a>安装部署</h2><p>本章节包含与ZooKeeper部署有关的内容，具体来说包含下面三部分内容：</p>
<ul>
<li><a href="#1.1">系统软硬件需求</a></li>
<li><a href="#1.2">集群部署（安装）</a></li>
<li><a href="#1.3">单机开发环境部署（安装）</a></li>
</ul>
<p>前两部分主要介绍如何在数据中心等生产环境上安装部署ZooKeeper，第三部分则介绍如何在非生产环境上（如为了评估、测试、开发等目的）安装部署ZooKeeper。</p>
<h3 id="系统软硬件需求"><a href="#系统软硬件需求" class="headerlink" title="系统软硬件需求"></a>系统软硬件需求<span id="1.1"></span></h3><h4 id="支持的OS平台"><a href="#支持的OS平台" class="headerlink" title="支持的OS平台"></a>支持的OS平台</h4><p>ZooKeeper框架由多个组件组成，有的组件支持全部平台，而还有一些组件只支持部分平台，详细支持情况如下：</p>
<ul>
<li><strong>Client：</strong>它是一个<code>Java</code>客户端连接库，上层应用系统通过它连接至ZooKeeper集群。</li>
<li><strong>Server：</strong>它是运行在ZooKeeper集群节点上的一个<code>Java</code>后台服务程序。</li>
<li><strong>Native Client：</strong>它是一个用<code>C</code>语言实现的客户端连接库，其与<code>Java</code>客户端库一样，上层应用（非<code>Java</code>实现）通过它连接至ZooKeeper集群。</li>
<li><strong>Contrib：</strong>它是指多个可选的扩展组件。</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:left">操作系统</th>
<th style="text-align:center">Client</th>
<th style="text-align:center">Server</th>
<th style="text-align:center">Native Client</th>
<th style="text-align:center">Contrib</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">GNU/Linux</td>
<td style="text-align:center">D + P</td>
<td style="text-align:center">D + P</td>
<td style="text-align:center">D + P</td>
<td style="text-align:center">D + P</td>
</tr>
<tr>
<td style="text-align:left">Solaris</td>
<td style="text-align:center">D + P</td>
<td style="text-align:center">D + P</td>
<td style="text-align:center">/</td>
<td style="text-align:center">/</td>
</tr>
<tr>
<td style="text-align:left">FreeBSD</td>
<td style="text-align:center">D + P</td>
<td style="text-align:center">D + P</td>
<td style="text-align:center">/</td>
<td style="text-align:center">/</td>
</tr>
<tr>
<td style="text-align:left">Windows</td>
<td style="text-align:center">D + P</td>
<td style="text-align:center">D + P</td>
<td style="text-align:center">/</td>
<td style="text-align:center">/</td>
</tr>
<tr>
<td style="text-align:left">Mac OS X</td>
<td style="text-align:center">D</td>
<td style="text-align:center">D</td>
<td style="text-align:center">/</td>
<td style="text-align:center">/</td>
</tr>
</tbody>
</table>
<a id="more"></a>
<blockquote>
<p><strong>D：支持开发环境， P：支持生成环境， /：不支持任何环境</strong></p>
</blockquote>
<p>上表中未显式注明支持的组件在相应平台上可能不能正常运行。虽然ZooKeeper社区会尽量修复在未支持平台上发现的BUG，但并无法保证会修复全部BUG。</p>
<h4 id="软件要求"><a href="#软件要求" class="headerlink" title="软件要求"></a>软件要求</h4><p>ZooKeeper需要运行在JDK6或以上版本中。若ZooKeeper以集群模式部署，则推荐的节点数至少为3，同时建议部署在独立的服务器上。在Yahoo!，ZooKeeper通常部署在运行RHEL系统的服务器上（服务器配置：双核CPU、2G内存、80G容量IDE硬盘）。</p>
<h3 id="集群部署（安装）"><a href="#集群部署（安装）" class="headerlink" title="集群部署（安装）"></a>集群部署（安装）<span id="1.2"></span></h3><p>为了保证ZooKeeper服务的可靠性，您应该以集群模式部署ZooKeeper服务。只要半数以上的集群节点在线，服务将是可用的。因为ZooKeeper需要半数以上节点同意才能选举出Leader，所以建议ZooKeeper集群的节点数为奇数个。举个例子，对于有四个节点的集群只能应付一个节点宕机的异常，如果有两个节点宕机，则剩下两个节点未达到法定的半数以上选票，ZooKeeper服务将变为不可用。而如果集群有五个节点，则集群就可以应付二个节点宕机的异常。</p>
<blockquote>
<p><strong>提示：</strong><br>正如<a href="https://zookeeper.apache.org/doc/r3.4.10/zookeeperStarted.html" target="_blank" rel="external">《ZooKeeper快速入门》</a>文档中所提到的，至少需要三个节点的ZooKeeper集群才具备容灾特性，因此我们强烈建议集群节点数为奇数。<br>通常情况下，生产环境下，集群节点数只需要三个。但如果为了在服务维护场景下也保证最大的可靠性，您也许会部署五个节点的集群。原因很简单，如果集群节点为三个，当你对其中一个节点进行维护操作，将很有可能因维护操作导致集群异常。而如果集群节点为5个，那你可以直接将维护节点下线，此时集群仍然可正常提供服务（就算四个节点中的任意一个突然宕机）。<br>您的冗余措施应该包括生产环境的各个方面。如果你部署三个节点的ZooKeeper集群，但你却将这三个节点都连接至同一个网络交换机，那么当交换机宕掉时，你的集群服务也一样是不可用的。</p>
</blockquote>
<p>关于如何配置服务器使其成为集群中的一个成员节点的详细步骤如下（每个节点的操作类似）：</p>
<ul>
<li>1.安装JDK，你可以使用本地包管理系统安装，也可以从JDK官网<a href="http://java.sun.com/javase/downloads/index.jsp" target="_blank" rel="external">下载</a></li>
<li>2.设置Java堆相关参数，这对于避免内存swap来说非常重要。因为频繁的swap将严重降低ZooKeeper集群的性能。您可以通过使用压力负载测试来决定一个合适的值，确保该值刚好低于触发swap的阈值。保守的做法是：当节点拥有4G的内存，则设置-xmx=3G。</li>
<li>3.安装ZooKeeper，您可以从<a href="http://zookeeper.apache.org/releases.html" target="_blank" rel="external">官网</a>下载：<a href="http://zookeeper.apache.org/releases.html" target="_blank" rel="external">http://zookeeper.apache.org/releases.html</a></li>
<li>4.创建一个配置文件，这个文件可以随便命名，您可以先使用如下设置参数：</li>
</ul>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">tickTime=2000</div><div class="line">dataDir=/var/lib/zookeeper/</div><div class="line">clientPort=2181</div><div class="line">initLimit=5</div><div class="line">syncLimit=2</div><div class="line"><span class="section">server.1=zoo1:2888:3888</span></div><div class="line"><span class="section">server.2=zoo2:2888:3888</span></div><div class="line"><span class="section">server.3=zoo3:2888:3888</span></div></pre></td></tr></table></figure>
<blockquote>
<p>您可以在<a href="#2.10">配置参数</a>章节中找到上面这些参数及其他参数的解释说明。这里简要说一下：集群中的每个节点都需要知道集群中其它节点成员的连接信息。通过上述配置文件中格式为<code>server.id=host:port:port</code>的若干行配置信息您就可以实现这个目标。<code>host</code>与<code>port</code>意思很简单明了，不多作说明。而<code>server.${id}</code>代表节点ID，你需要为每个节点创建一个名为<code>myid</code>的文件，该文件存放于参数<code>dataDir</code>所指向的目录下。</p>
</blockquote>
<ul>
<li>5.<code>myid</code>文件的内容只有一行，其值为配置参数<code>server.${id}</code>中<code>${id}</code>的实际值。即服务器1对应的<code>myid</code>文件的内容为1，这个值在集群中必须保证其唯一性，同时必须处于[1, 255]之间。</li>
<li>6.如果你已经创建好配置文件（如zoo.cfg），你就可以启动ZooKeeper服务：</li>
</ul>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ java -cp zookeeper.<span class="symbol">jar:</span><span class="class"><span class="keyword">lib</span>/<span class="title">slf4j</span>-<span class="title">api</span>-1.6.1.<span class="title">jar</span>:<span class="title">lib</span>/</span></div><div class="line">slf4j-log4j12-<span class="number">1.6</span>.<span class="number">1</span>.<span class="symbol">jar:</span><span class="class"><span class="keyword">lib</span>/<span class="title">log4j</span>-1.2.15.<span class="title">jar</span>:<span class="title">conf</span> \</span></div><div class="line">org.apache.zookeeper.server.quorum.QuorumPeerMain zoo.cfg</div></pre></td></tr></table></figure>
<blockquote>
<p>QuorumPeerMain启动一个ZooKeeper服务，JMX管理bean也同时被注册，通过这些JMX管理bean，你就可以在JMX管理控制台上对ZooKeeper服务进行监控管理。ZooKeeper的<a href="https://zookeeper.apache.org/doc/r3.4.10/zookeeperJMX.html" target="_blank" rel="external">JMX文档</a>有更详细的介绍信息。同时，你也可以在<code>$ZOOKEEPER_HOME/bin</code>目录下找到ZooKeeper的启动脚本<code>zkServer.sh</code>。</p>
</blockquote>
<ul>
<li>7.接下来你就可以连接至ZooKeeper节点来测试部署是否成功。<br>在<code>Java</code>环境下，你可以运行下面的命令连接至已启动的ZooKeeper服务节点并执行一些简单的操作</li>
</ul>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> bin/zkCli.sh -server 127.0.0.1:2181</span></div></pre></td></tr></table></figure>
<h3 id="单机开发环境部署介绍"><a href="#单机开发环境部署介绍" class="headerlink" title="单机开发环境部署介绍"></a>单机开发环境部署介绍<span id="1.3"></span></h3><p>如果你想部署ZooKeeper以便于开发测试，那你可以使用单机部署模式。然后安装Java或C客户端连接库，同时在配置文件中将服务器信息与开发机绑定。<br>具体安装部署步骤也集群部署模式类似，唯一不同的是zoo.cfg配置文件更简单一些。你可以从<a href="https://zookeeper.apache.org/doc/r3.4.10/zookeeperStarted.html" target="_blank" rel="external">《ZooKeeper快速入门》</a>文档中的相关章节获取详细的操作步骤。<br>关于安装客户端连接库的相关信息，你可以从<a href="https://zookeeper.apache.org/doc/r3.4.10/zookeeperProgrammers.html" target="_blank" rel="external">ZooKeeper Programmer’s Guide</a>文件的Bindings章节中获取。</p>
<h2 id="维护管理"><a href="#维护管理" class="headerlink" title="维护管理"></a>维护管理</h2><p>这部分包含ZooKeeper运行与维护相关的信息，其包含如下几个主题：</p>
<ul>
<li><a href="#2.1">ZooKeeper集群部署规划</a></li>
<li><a href="#2.2">Provisioning</a></li>
<li><a href="#2.3">ZooKeeper的强项与使用限制</a></li>
<li><a href="#2.4">管理</a></li>
<li><a href="#2.5">维护</a></li>
<li><a href="#2.6">Supervision</a></li>
<li><a href="#2.7">Monitoring</a></li>
<li><a href="#2.8">日志</a></li>
<li><a href="#2.9">疑难解答</a></li>
<li><a href="#2.10">配置参数（高级配置）</a></li>
<li><a href="#2.11">ZooKeeper命令: 4字符命令</a></li>
<li><a href="#2.12">数据文件管理</a></li>
<li><a href="#2.13">避免踩坑</a></li>
<li><a href="#2.14">最佳实践</a></li>
</ul>
<h3 id="ZooKeeper集群部署规划"><a href="#ZooKeeper集群部署规划" class="headerlink" title="ZooKeeper集群部署规划"></a>ZooKeeper集群部署规划<span id="2.1"></span></h3><p>ZooKeeper可靠性依赖于两个基本的假设：</p>
<ul>
<li>一个集群中只会有少数服务器会出错，这里的出错是指宕机或网络异常而使得服务与集群中的多数服务器失去联系。</li>
<li>已部署的机器可以正常运行，所谓正常运行是指所有代码可以正确的执行，有适当且一致的工作时钟、存储、网络。</li>
</ul>
<p>为了最大可能的保证上述两个前提假设能够成立，这里有几个点需要考虑。一些是关于跨服务器（节点之间）需求的，而另一些是关于集群中每个节点服务器的考虑。</p>
<h4 id="跨机器要求"><a href="#跨机器要求" class="headerlink" title="跨机器要求"></a>跨机器要求</h4><p>为了启用ZooKeeper服务，集群中半数以上的节点需要能够相互通信。为了创建一个可以支撑F个节点异常的集群，你需要部署2xF+1个节点。即一个包含三个节点的集群可以应对一个节点异常的情况，一个包含五个节点的集群则可以应对二个节点异常的情况，依此类推。需要注意的是，一个包含六个节点的集群也只能应对二个节点失败的情况，因为三个节点并未超过半数。因此，ZooKeeper集群中的节点数通常为奇数。</p>
<p>为了实现最大限度的容灾能力，你应该尽力使集群节点发生异常时不影响其它节点（即保持节点部署上尽可能的独立）。举个例子，当大部分的机器共享同一个交换机，若这个交换机挂了将使关联的服务都下线。共享电源电路、冷却系统等也是同样的道理（有同样的单点问题）。</p>
<h4 id="单机要求"><a href="#单机要求" class="headerlink" title="单机要求"></a>单机要求</h4><p>如果ZooKeeper服务需要与其它应用竞争存储、CPU、网络、内存等资源时，其性能将显著下降。机器必须为ZooKeeper服务提供持久化保障，因为ZooKeeper需要先使用存储设备来保存变更日志，然后才允许变更操作提交。如果你想确保ZooKeeper操作不会因存储而挂起，那你应该意识到这个依赖关系并重视起来。这里有几个事情可以最小化这类问题所带来的消极影响。</p>
<ul>
<li>ZooKeeper的事务日志必须存储在专用的设备上（一个专用分区是不够的）ZooKeeper以串行的方式写入日志。如果与其它进程共享日志存储设备将导致磁盘寻址与IO竞争，这最终将导致几秒的时延。</li>
<li>不要将Zookeeper放置在可能引起swap的环境。为了保证Zookeeper的实时性，它几乎不允许swap。因此，请确保分配给ZooKeeper的最大堆内存大小不能大于ZooKeeper可用的真实的内存大小。关于这一点的更多信息，请参数后续章节 <a href="#2.13">Things to Avoid</a>。</li>
</ul>
<h3 id="Provisioning"><a href="#Provisioning" class="headerlink" title="Provisioning"></a><span id="2.2"></span>Provisioning</h3><p>无</p>
<h3 id="ZooKeeper的优势与局限"><a href="#ZooKeeper的优势与局限" class="headerlink" title="ZooKeeper的优势与局限"></a><span id="2.3"></span>ZooKeeper的优势与局限</h3><p>无</p>
<h3 id="管理"><a href="#管理" class="headerlink" title="管理"></a><span id="2.4"></span>管理</h3><p>无</p>
<h3 id="维护"><a href="#维护" class="headerlink" title="维护"></a><span id="2.5"></span>维护</h3><p>ZooKeeper的长期维护需求几乎没有，然而你仍然需要注意如下几件事情：</p>
<h4 id="持续的数据目录清理"><a href="#持续的数据目录清理" class="headerlink" title="持续的数据目录清理"></a>持续的数据目录清理</h4><p>ZooKeeper的数据目录包含集群上特殊存储结点znode数据的持久化拷贝文件。文件中包含快照与事务日志文件。znode上数据的变更将同时会被追加至事务日志中。当这些日志不断增长时，所有znode的当前状态的快照文件将被写回文件系统。这个快照将取代之前的日志。</p>
<p>ZooKeeper服务器默认情况下不会移除旧的快照与日志文件，删除快照与日志这项工作是管理员的责任。因为每个服务环境是不一样的，所以管理这些快照与文件的需求也是不同一。<code>PurgeTxnLog</code>工具实现了一个简单的保留策略，管理员可以使用这个工具，<a href="https://zookeeper.apache.org/doc/r3.4.10/api/index.html" target="_blank" rel="external">API docs</a> 中包含有详细的使用说明。<br>下面的例子的作用为：保留最近<code>&lt;count&gt;</code>个快照及相关的日志，其它的快照及相关日志则删除。<code>&lt;count&gt;</code>的值通常要大于3（虽然不是必须的，但提供3个备份时将极大降低日志损坏的可能性）。您可以在ZooKeeper服务器上运行<code>cron</code>脚本来每天清除过期日志。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ java -cp zookeeper<span class="selector-class">.jar</span>:lib/slf4j-api-<span class="number">1.6</span>.<span class="number">1</span><span class="selector-class">.jar</span>:lib/slf4j-log4j12-<span class="number">1.6</span>.<span class="number">1</span><span class="selector-class">.jar</span>:lib/</div><div class="line">log4j-<span class="number">1.2</span>.<span class="number">15</span><span class="selector-class">.jar</span>:conf org<span class="selector-class">.apache</span><span class="selector-class">.zookeeper</span><span class="selector-class">.server</span><span class="selector-class">.PurgeTxnLog</span> &lt;dataDir&gt; &lt;snapDir&gt; -n &lt;count&gt;</div></pre></td></tr></table></figure>
<p>在V3.4.0版本中引入的自动清除快照及相关事务日志的特性可以通过配置参数<code>autopurge.snapRetainCount</code> 与 <code>autopurge.purgeInterval</code>来启用。更多的使用见后续的<a href="#2.10">配置参数（高级配置）</a>章节。</p>
<h4 id="调试日志清理-log4j"><a href="#调试日志清理-log4j" class="headerlink" title="调试日志清理 (log4j)"></a>调试日志清理 (log4j)</h4><p>通过本文档的<a href="#2.8">日志</a>章节可知，ZooKeeper将使用Log4j内置的日志滚动覆盖功能最多生成N个日志文件。Log4j的配置示例可在发行版本tar包的<code>conf/log4j.properties</code>文件中找到。</p>
<h3 id="Supervision"><a href="#Supervision" class="headerlink" title="Supervision"></a><span id="2.6"></span>Supervision</h3><p>你需要一个监督进程来管理ZooKeeper服务进程（本质上为一个Java进程）。ZooKeeper服务具有“快速失败”的特性，即只要服务发生不可恢复的错误，则ZK进程直接退出。因为ZK集群是高可用的，所有集群中的一个ZK服务虽然异常退出了，但整个集群仍然是可用的，仍然可对外提供服务。同时由于集群可以自行恢复特性，一旦此前异常退出的服务器重启后，它将自动重新加入集群中而不需要任何的人工干预。</p>
<p>因此，我们就需要一个类似<code>daemontools或SMF</code>的工具来管理ZK服务，确保进程异常退出后可以自动被重启并快速重新加入集群。</p>
<h3 id="Monitoring"><a href="#Monitoring" class="headerlink" title="Monitoring"></a><span id="2.7"></span>Monitoring</h3><p>ZK服务可以使用如下两种方式进行监控：</p>
<ul>
<li>ZK提供的4个字母的命令工具</li>
<li>JMX（详见ZK官网提供的JMX相关文档）</li>
</ul>
<h3 id="日志"><a href="#日志" class="headerlink" title="日志"></a><span id="2.8"></span>日志</h3><p>ZK使用V1.2版本的Log4j作为其日志组件。ZK默认的日志配置文件位于发行版本的conf目录下。Log4j需要<code>log4j.properties</code>文件，这个文件要么位于ZK运行时所在的目录，要么位于classpath目录。</p>
<p>更多的信息见 <a href="http://logging.apache.org/log4j/1.2/manual.html#defaultInit" target="_blank" rel="external">Log4j Default Initialization Procedure</a> 。</p>
<h3 id="疑难解答"><a href="#疑难解答" class="headerlink" title="疑难解答"></a><span id="2.9"></span>疑难解答</h3><p><strong>文件损坏导致服务器无法启动问题</strong><br>ZK服务器可能会因无法正常读取数据导致启动失败。出现这个问题可能是因为ZK服务器上的事务日志文件损坏了。你可以从ZK的log4j日志中看到一些与ZK数据加载相关的<code>IOException</code>异常。在这种情况下，首先确保集群中的其他服务器能正常工作。可以使用<code>stat</code>命令查看它们是否处于健康状态。当你已经确认集群中其它服务器都在运行中，你可以进一步清理异常中断的服务器上的数据库：删除<code>$data_dir/version-2</code>目录与<code>$data_log_dir/version-2</code>目录下的内容，然后重启服务即可。</p>
<h3 id="配置参数（高级配置）"><a href="#配置参数（高级配置）" class="headerlink" title="配置参数（高级配置）"></a><span id="2.10"></span>配置参数（高级配置）</h3><p>ZooKeeper的行为是由其配置文件<code>$ZK_HOME\conf\zoo.cfg</code>来控制的。由于这个配置文件是设计好的，因此当ZK集群中每个成员的部署结构（磁盘路径等）都一样时，这个配置文件可以被所有成员共用。如果成员服务器使用不同的配置文件，一定要注意保证各个服务器的配置文件的服务器列表信息是匹配的。</p>
<h4 id="最简（小）配置"><a href="#最简（小）配置" class="headerlink" title="最简（小）配置"></a>最简（小）配置</h4><p>下面是部署一个ZK集群时，配置文件必须要设置的参数信息（最简配置）：<br><strong>clientPort</strong><br>客户端连接监听端口，即客户端发起连接请求时，都会尝试连接至ZK服务器的该端口。<br><strong>dataDir</strong><br>ZK内存数据库快照的保存位置，除非另有规定，否则事务日志也会保存至该位置。</p>
<blockquote>
<p>一定要注意事务日志的存储位置。一个专用的事务日志设备是保证高性能的关键。如果将事务日志存放于IO比较频繁的设备将产生不利的性能效果。</p>
</blockquote>
<p><strong>tickTime</strong></p>
<p>计时时间片长度（单位：毫秒），它是ZK中所有与时间有关参数的基本时间单元（即当某参数的值为X，则其语义可这样理解：某参数的值为tickTime的X倍）。它通常用于日常的心跳发送周期、超时时间等。<br>比如，当<code>tickTime=2000,minSessionTimeout=2</code>，<br>则会话超时的最小值为：<code>tickTime*minSessionTimeout=4000ms</code>。</p>
<h4 id="高级配置"><a href="#高级配置" class="headerlink" title="高级配置"></a>高级配置</h4><p>本节所介绍的配置参数是可选的。你可以使用它们进一步调整ZK集群的行为。有些参数也可以通过形如<code>zookeeper.keyword</code>之类的Java系统属性的方式来配置。下面的参数详细介绍中有标明哪些参数可以通过Java系统属性方式配置。</p>
<p><strong>dataLogDir</strong></p>
<p>这个选项会让机器将事务日志直接写到dataLogDir所指定的位置，而不再是默认的dataDir。这将允许使用专用的日志设备，同时可有效避免快照操作与日志操作所带来的IO竞争。</p>
<blockquote>
<p>使用专用的日志设备将极大的影响系统吞吐量与系统时延。强烈推荐使用专用的日志设备，并将dataLogDir指向该专用设备的一个目录，然后也要确保dataDir参数所指向的目录未指向专用的日志设备。</p>
</blockquote>
<p><strong>globalOutstandingLimit</strong><br>(Java系统属性: zookeeper.globalOutstandingLimit)</p>
<p>客户端提交的请求数通过会比ZK的处理速度快，特别是存在大量客户端连接的情况。为了防止因队列中的请求数多过导致ZK运行过程中出现内存溢出问题，ZK将控制客户端的请求数，这样将可以保证系统请求数不会多于<code>globalOutstandingLimit</code>参数所指定的值，系统默认值为1000。</p>
<p><strong>preAllocSize</strong><br>(Java系统属性: zookeeper.preAllocSize)</p>
<p>To avoid seeks ZooKeeper allocates space in the transaction log file in blocks of preAllocSize kilobytes. The default block size is 64M. One reason for changing the size of the blocks is to reduce the block size if snapshots are taken more often. (Also, see snapCount).</p>
<p><strong>snapCount</strong><br>(Java系统属性: zookeeper.snapCount)</p>
<p>ZK将事务写入事务日志文件中。当<code>snapCount</code>个事务被写入日志文件后，ZK将创建一个快照，然后一个新的事务日志文件会被创建。该参数的默认值为:100000。</p>
<p><strong>maxClientCnxns</strong></p>
<p>限制同一个客户端连接（通过IP标识唯一性）至一个ZK集群节点的并发连接数（Socket级别）。这个参数主要是用来防止某些类型的DoS攻击，包括<code>file-descriptor exhaustion</code>。该参数默认值为60，如果设置为0则意味着关闭并发控制限制功能。</p>
<p><strong>clientPortAddress</strong></p>
<p><strong>V3.3.0引入</strong>: 客户端连接监听地址（IPv4,IPv6,主机名）， 这个参数是可选的。默认情况下，所有连接至<code>clientPort</code>参数指定端口号的连接都会被接受，不管这些连接是来自于哪个网络接口。</p>
<p><strong>minSessionTimeout</strong></p>
<p><strong>V3.3.0引入</strong>: 最小会话超时时间（毫秒），在会话期间服务器将允许来自客户端的协商。该参数默认值为2倍的tickTime。</p>
<p><strong>maxSessionTimeout</strong></p>
<p><strong>V3.3.0引入</strong>: 最小会话超时时间（毫秒），在会话期间服务器将允许来自客户端的协商。该参数默认值为20倍的tickTime。</p>
<p><strong>fsync.warningthresholdms</strong><br>(Java系统属性: zookeeper.fsync.warningthresholdms)</p>
<p><strong>V3.3.4引入</strong>: 当事务日志(WAL)中的<code>fsync</code>操作时间超过该参数所设置的值时，一个告警信息将被输出到log4j日志中。该参数默认值为1000毫秒，该值只能通过系统属性的方式设置。</p>
<p><strong>autopurge.snapRetainCount</strong></p>
<p><strong>V3.4.0引入</strong>: 当启用该参数时，ZK将仅保留dataDir与dataLogDir目录下最近的快照及事务日志数据，保留的数量由该参数设置值决定；然后清除其它过期数据。默认值为3，最小值为3。</p>
<p><strong>autopurge.purgeInterval</strong></p>
<p><strong>V3.4.0引入</strong>: 以小时为单位的时间间隔，即每隔N小时将触发一次快照及事务日志清理任务。设置一个正数（大于等于1）即可启用自动清理功能，默认值为0。</p>
<p><strong>syncEnabled</strong><br>(Java系统属性: zookeeper.observer.syncEnabled)</p>
<p><strong>V3.4.6, V3.5.0引入</strong>: 集群中角色为observer的成员实时的将事务日志与快照数据写回磁盘，就好像它们是业务的参与者一样。这将减少这些成员的重启恢复时间。如果将这个参数设置为<code>false</code>，将禁用这个特性。默认为<code>true</code>。</p>
<p><strong>与集群有关的参数选项</strong><br>本节所介绍的参数选项主要用于服务器集群中，也就是说当部署一个集群时可以使用这些参数。</p>
<p><strong>electionAlg</strong></p>
<p>配置集群使用的选举算法。0值代表基于UDP的版本，1值代表基于UDP的无认证的快速Leader选举版本，2值代表基于UDP的有认证的快速Leader选举版本，3值代表基于TCP快速Leader选举版本。算法3为默认值。</p>
<blockquote>
<p>0，1，2三个leader选举的实现方案现已被废弃。我们计划在下一个版本中移除，也就是说后续只有<code>FastLeaderElection</code>可用。</p>
</blockquote>
<p><strong>initLimit</strong></p>
<p>允许集群中follower节点连接及同步数据至leader节点的时间耗时（以tickTime为单位）。如果由ZK管理的数据量比较大，则可以按需增加这个值。</p>
<p><strong>leaderServes</strong><br>(Java系统属性: zookeeper.leaderServes)</p>
<p>配置集群中的leader节点是否接受客户端连接，默认为<code>yes</code>。Leader节点主要负责协调集群节点之间数据的更新。对于与协调更新有关的吞吐量远高于客户端的读请求的吞吐量，则leader节点可设置为不接受客户端的连接请求，而专注于协调集群节点间的数据更新。默认值为<code>yes</code>意味着leader节点默认情况下将会接受客户端的连接请求。</p>
<blockquote>
<p>当集群超过3个以上的节点时，推荐打开这个开关。</p>
</blockquote>
<p><strong>server.x=[hostname]:nnnnn[:nnnnn]</strong></p>
<p>ZK集群由多个服务器节点组成。当服务器节点启动时，ZK到$data_dir目录下找到<code>myid</code>文件，并根据里面内容确定其身份编号及连接端口信息。<code>myid</code>文件中包含当前服务器节点的编号（以ASCII格式呈现），这个编号与上述配置参数<code>server.x</code>中的<code>x</code>匹配的则为当前服务器节点的IP与监听端口。</p>
<p>配置参数中的服务器列表信息必须与ZK集群服务器节点的一一匹配。</p>
<p>配置参数中有两个端口号，第一个端口用于follower节点与leader节点间的通信，第二个端口用于集群leader选举。只有<code>electionAlg</code>参数值为非0值时，选举用的端口号（第二个）才是必须的。若<code>electionAlg</code>参数值为0值时，则第二个端口号是非必要的。如果你想在单机上测试多个服务器，则可以使用不同的端口号。</p>
<p><strong>syncLimit</strong></p>
<p>允许集群follower节点与leader节点进行数据同步的总耗时（以tickTime为单位）。如果follower的数据与leader的数据由于同步不及时导致差异太大，则这些follower节点将被移出集群。</p>
<p><strong>group.x=nnnnn[:nnnnn]</strong></p>
<p>Enables a hierarchical quorum construction.”x”是组编号，而”=”右边则是用”:”分隔的服务器编号。每组的服务器成员编号不能有交集，同时所有组的节点成员的并集刚好是集群的所有成员。</p>
<p> 你可在<a href="http://zookeeper.apache.org/doc/r3.4.10/zookeeperHierarchicalQuorums.html" target="_blank" rel="external">这里</a>找到使用的例子。</p>
<p><strong>weight.x=nnnnn</strong></p>
<p>与”group”参数搭配使用。它为集群中的每个成员提供一个权值，这个权值在进行进行法定人数选举投票时会用到。There are a few parts of ZooKeeper that require voting such as leader election and the atomic broadcast protocol. By default the weight of server is 1. If the configuration defines groups, but not weights, then a value of 1 will be assigned to all servers.</p>
<p>你可在<a href="http://zookeeper.apache.org/doc/r3.4.10/zookeeperHierarchicalQuorums.html" target="_blank" rel="external">这里</a>找到使用的例子。</p>
<p><strong>cnxTimeout</strong><br>(Java系统属性: zookeeper.cnxTimeout)</p>
<p>为leader选举通知消息而打开的连接设置一个超时时间。只有<code>electionAlg</code>值为3时这个参数才有用。默认值为5秒。</p>
<p><strong>4lw.commands.whitelist</strong><br>(Java系统属性: zookeeper.4lw.commands.whitelist)</p>
<p><strong>V3.4.10引入</strong>: 这个属性包含了一系统用逗号分隔的由4个字符组成的命令列表。它之所以被引入是为了提供更灵活的粒度控制机制来决定哪些ZK命令可以执行。因此借助这个参数，用于可以根据需要来关闭某些命令。默认情况下，若未指定该参数，则除了<code>wchp</code>与<code>wchc</code>以外的命令都可以执行。如果配置了该参数，则只有参数中列出的命令可以执行（被连接的客户端调用执行）。</p>
<p>下面是一个只启用了<code>stat,ruok,conf,isro</code>命令的配置：<br><code>4lw.commands.whitelist=stat, ruok, conf, isro</code></p>
<p>用户也可以使用通配符来进行配置，如：<br><code>4lw.commands.whitelist=*</code></p>
<p><strong>认证与授权参数选项</strong><br>本节介绍的内容主要是用于配置认证/授权相关功能的。</p>
<p><strong>zookeeper.DigestAuthenticationProvider.superDigest</strong><br>(Java系统属性: zookeeper.DigestAuthenticationProvider.superDigest)，只能通过Java系统属性方式配置。</p>
<p>该特性默认是禁用的</p>
<p><strong>V3.2版引入</strong>: Enables a ZooKeeper ensemble administrator to access the znode hierarchy as a “super” user. In particular no ACL checking occurs for a user authenticated as super.</p>
<p>org.apache.zookeeper.server.auth.DigestAuthenticationProvider can be used to generate the superDigest, call it with one parameter of <code>super:&lt;password&gt;</code>. Provide the generated <code>super:&lt;data&gt;</code> as the system property value when starting each server of the ensemble.</p>
<p>When authenticating to a ZooKeeper server (from a ZooKeeper client) pass a scheme of “digest” and authdata of <code>super:&lt;password&gt;</code>. Note that digest auth passes the authdata in plaintext to the server, it would be prudent to use this authentication method only on localhost (not over the network) or over an encrypted connection.</p>
<h3 id="ZK命令：4字符命令"><a href="#ZK命令：4字符命令" class="headerlink" title="ZK命令：4字符命令"></a><span id="2.11"></span>ZK命令：4字符命令</h3><p>ZooKeeper可以响应一个小规模的命令集。命令集中的每个命令由4个字母组成。<br>你可以通过nc或telnet向ZooKeeper服务器的客户端监听端口发送命令。其中有三个命令是比较令人感兴趣的：<code>stat</code>会输出与服务器、已连接的客户端相关的基本信息；<code>srvr</code>与<code>cons</code>会输出服务器与各个连接的进一步的详细信息。</p>
<blockquote>
<p><strong>conf</strong><br>V3.3.0版引入: 打印ZooKeeper配置的详细信息。<br><strong>cons</strong><br>V3.3.0版引入: 列出所有连接至本服务器的客户端连接/会话的详细信息。包括收发数据包数量、会话ID、操作时延（响应时间）、上一次执行的操作等信息。<br><strong>crst</strong><br>V3.3.0版引入: 重置所有连接/会话的统计数据。<br><strong>dump</strong><br>Lists the outstanding sessions and ephemeral nodes. This only works on the leader.<br><strong>envi</strong><br>打印ZK服务环境信息。<br><strong>ruok</strong><br>测试ZK服务器是否处于正常运行状态。若服务器正常运行，则会返回imok响应；反之则压根不会返回任何响应信息。<br><code>imok</code>响应并不意味着该服务器已经加入ZK法定成员中，而仅代表服务器处于活动状态且与某个特定的客户端口建立了绑定关系。你可以使用<code>stat</code>命令查看该服务器是否加入法定投票成员及客户端连接等详细状态信息。<br><strong>srst</strong><br>重置服务器统计数据。<br><strong>srvr</strong><br>V3.3.0版引入: 列出服务器的完整的详细信息。<br><strong>stat</strong><br>列出服务器及已连接至该服务器的客户端的简要信息。<br><strong>wchs</strong><br>V3.3.0版引入: 列出watch该服务器的客户端的简要信息。<br><strong>wchc</strong><br>V3.3.0版引入: 从session视角列出watch该服务器的客户端的详细信息。该命令将输出session(connection)所watch的路径的相关信息。有一点要注意下，执行这个命令的性能损耗与watch的数量有关，请谨慎使用。<br><strong>wchp</strong><br>V3.3.0版引入: 从path视角列出watch该path的相关客户端session。有一点要注意下，执行这个命令的性能损耗与watch的数量有关，请谨慎使用。<br><strong>mntr</strong><br>V3.4.0版引入: 输出可用于监控集群健康状态的参数列表。</p>
</blockquote>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">$ echo mntr | nc localhost <span class="number">2185</span></div><div class="line">zk_version <span class="number">3.4</span><span class="number">.0</span></div><div class="line">zk_avg_latency <span class="number">0</span></div><div class="line">zk_max_latency <span class="number">0</span></div><div class="line">zk_min_latency <span class="number">0</span></div><div class="line">zk_packets_received <span class="number">70</span></div><div class="line">zk_packets_sent <span class="number">69</span></div><div class="line">zk_outstanding_requests <span class="number">0</span></div><div class="line">zk_server_state leader</div><div class="line">zk_znode_count <span class="number">4</span></div><div class="line">zk_watch_count <span class="number">0</span></div><div class="line">zk_ephemerals_count <span class="number">0</span></div><div class="line">zk_approximate_data_size <span class="number">27</span></div><div class="line">zk_followers <span class="number">4</span> - only exposed by the Leader</div><div class="line">zk_synced_followers <span class="number">4</span> - only exposed by the Leader</div><div class="line">zk_pending_syncs <span class="number">0</span> - only exposed by the Leader</div><div class="line">zk_open_file_descriptor_count <span class="number">23</span> - only available on Unix platforms</div><div class="line">zk_max_file_descriptor_count <span class="number">1024</span> - only available on Unix platforms</div></pre></td></tr></table></figure>
<p>The output is compatible with java properties format and the content may change over time (new keys added). Your scripts should expect changes.<br>ATTENTION: Some of the keys are platform specific and some of the keys are only<br>exported by the Leader. The output contains multiple lines with the following format:<br><code>key \t value</code></p>
<p>Here’s an example of the ruok command:</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ echo ruok | nc <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">5111</span></div><div class="line">imok</div></pre></td></tr></table></figure>
<h3 id="数据文件管理"><a href="#数据文件管理" class="headerlink" title="数据文件管理"></a><span id="2.12"></span>数据文件管理</h3><p>ZK将其业务数据保存在数据目录，将其事务日志保存在事务日志目录。默认情况下数据目录与事务日志目录是相同的。服务器可以（应该）将事务日志目录与数据目录分开存储。如果将事务日志存储在专用的日志设备上，则吞吐量上升的同时，时延还会下降。</p>
<h4 id="数据目录"><a href="#数据目录" class="headerlink" title="数据目录"></a>数据目录</h4><p>这个目录下包含两个文件:</p>
<ul>
<li>myid - 包含一个单独的以ASCII形式存储的整数值，这个值代表其所在服务器的ID。</li>
<li><code>snapshot.&lt;zxid&gt;</code> - 这个文件保存有数据树结构的模糊快照。</li>
</ul>
<p>每个ZooKeeper服务器都有一个唯一标识ID，这个ID用于两个地方：<code>myid</code>文件与配置文件。位于数据目录下的<code>myid</code>文件用于标识ZK服务器。配置文件<code>zoo.cfg</code>中列出了集群节点间相互通信的配置信息（IP或主机名、监听端口等），每行配置信息通过Server ID来标识。当ZooKeeper服务实例启动时，其会从<code>myid</code>文件中获取它的标识ID，然后再从配置文件<code>zoo.cfg</code>中读取匹配该ID的服务器配置信息，根据配置信息启动相关端口的监听服务。</p>
<p>The snapshot files stored in the data directory are fuzzy snapshots in the sense that during the time the ZooKeeper server is taking the snapshot, updates are occurring to the data tree. The suffix of the snapshot file names is the zxid, the ZooKeeper transaction id, of the last committed transaction at the start of the snapshot. Thus, the snapshot includes a subset of the updates to the data tree that occurred while the snapshot was in process. The snapshot, then, may not correspond to any data tree that actually existed, and for this reason we refer to it as a fuzzy snapshot. Still, ZooKeeper can recover using this snapshot because it takes advantage of the idempotent nature of its updates. By replaying the transaction log against fuzzy snapshots ZooKeeper gets the state of the system at the end of the log.</p>
<h4 id="日志目录"><a href="#日志目录" class="headerlink" title="日志目录"></a>日志目录</h4><p>日志目录包含ZK的事务日志。当任何更新生效前，ZK会确保代表该更新的事务会被写入稳定的存储中。每创建一次快照，会创建一个新的事务日志文件，该日志文件名的后缀为第一个写入该文件的事务日志的zxid。</p>
<h4 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h4><p>单机模式与集群模式下的快照与日志文件的格式是一样的，因此你可以从集群复制模式环境中获取相关快照及日志文件到单机开发环境中进行问题排查。</p>
<p>通过使用旧的日志及快照文件，你可以分析ZK服务器以前的状态甚至可以恢复至该旧状态。<code>LogFormatter</code>类允许管理员分析一个日志中的相关事务。</p>
<p>ZK负责快照及日志的创建，但其不会删除这些文件。数据及日志文件的保留策略由外部应用实现。服务器自身只需要最近一次的模糊快照以及从开始创建该快照以来的事务日志文件即可。可以查看“<a href="#2.5">维护</a>”章节来查看更详细的与保留策略相关的配置信息。</p>
<blockquote>
<p>存储在这些文件中的数据是未加密的。在存储敏感数据的场景下，有必要采取一定的措施来阻止未授权访问请求。这些预防措施都不属于ZK的功能范围，因此相关配置信息也是独立的，本文档不多做介绍。</p>
</blockquote>
<h3 id="避免踩坑"><a href="#避免踩坑" class="headerlink" title="避免踩坑"></a><span id="2.13"></span>避免踩坑</h3><p>下面是几个在配置ZK服务时经常碰到的问题及解决办法：</p>
<p><strong>服务器列表数据不一致</strong><br>The list of ZooKeeper servers used by the clients must match the list of ZooKeeper servers that each ZooKeeper server has. Things work okay if the client list is a subset of the real list, but things will really act strange if clients have a list of ZooKeeper servers that are in different ZooKeeper clusters. Also, the server lists in each Zookeeper server configuration file should be consistent with one another.</p>
<p><strong>incorrect placement of transasction log</strong><br>The most performance critical part of ZooKeeper is the transaction log. ZooKeeper syncs transactions to media before it returns a response. A dedicated transaction log device is key to consistent good performance. Putting the log on a busy device will adversely effect performance. If you only have one storage device, put trace files on NFS and increase the snapshotCount; it doesn’t eliminate the problem, but it should mitigate it.</p>
<p><strong>Java堆大小配置不正确</strong><br>You should take special care to set your Java max heap size correctly. In particular, you should not create a situation in which ZooKeeper swaps to disk. The disk is death to ZooKeeper. Everything is ordered, so if processing one request swaps the disk, all other queued requests will probably do the same. the disk. DON’T SWAP.</p>
<p>Be conservative in your estimates: if you have 4G of RAM, do not set the Java max heap size to 6G or even 4G. For example, it is more likely you would use a 3G heap for a 4G machine, as the operating system and the cache also need memory. The best and only recommend practice for estimating the heap size your system needs is to run load tests, and then make sure you are well below the usage limit that would cause the system to swap.</p>
<p><strong>暴露在公网</strong><br>一个ZK集群应该部署在一个可靠的计算环境中，因此推荐部署在防火墙后面。</p>
<h3 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a><span id="2.14"></span>最佳实践</h3><p>For best results, take note of the following list of good Zookeeper practices: For multi-tennant installations see the section detailing ZooKeeper “chroot” support, this canbe very useful when deploying many applications/services interfacing to a single ZooKeeper cluster.</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文档主要介绍ZooKeeper部署及日常管理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;安装部署&quot;&gt;&lt;a href=&quot;#安装部署&quot; class=&quot;headerlink&quot; title=&quot;安装部署&quot;&gt;&lt;/a&gt;安装部署&lt;/h2&gt;&lt;p&gt;本章节包含与ZooKeeper部署有关的内容，具体来说包含下面三部分内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1.1&quot;&gt;系统软硬件需求&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#1.2&quot;&gt;集群部署（安装）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#1.3&quot;&gt;单机开发环境部署（安装）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前两部分主要介绍如何在数据中心等生产环境上安装部署ZooKeeper，第三部分则介绍如何在非生产环境上（如为了评估、测试、开发等目的）安装部署ZooKeeper。&lt;/p&gt;
&lt;h3 id=&quot;系统软硬件需求&quot;&gt;&lt;a href=&quot;#系统软硬件需求&quot; class=&quot;headerlink&quot; title=&quot;系统软硬件需求&quot;&gt;&lt;/a&gt;系统软硬件需求&lt;span id=&quot;1.1&quot;&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h4 id=&quot;支持的OS平台&quot;&gt;&lt;a href=&quot;#支持的OS平台&quot; class=&quot;headerlink&quot; title=&quot;支持的OS平台&quot;&gt;&lt;/a&gt;支持的OS平台&lt;/h4&gt;&lt;p&gt;ZooKeeper框架由多个组件组成，有的组件支持全部平台，而还有一些组件只支持部分平台，详细支持情况如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Client：&lt;/strong&gt;它是一个&lt;code&gt;Java&lt;/code&gt;客户端连接库，上层应用系统通过它连接至ZooKeeper集群。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server：&lt;/strong&gt;它是运行在ZooKeeper集群节点上的一个&lt;code&gt;Java&lt;/code&gt;后台服务程序。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Native Client：&lt;/strong&gt;它是一个用&lt;code&gt;C&lt;/code&gt;语言实现的客户端连接库，其与&lt;code&gt;Java&lt;/code&gt;客户端库一样，上层应用（非&lt;code&gt;Java&lt;/code&gt;实现）通过它连接至ZooKeeper集群。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Contrib：&lt;/strong&gt;它是指多个可选的扩展组件。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;操作系统&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Client&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Server&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Native Client&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Contrib&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;GNU/Linux&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D + P&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D + P&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D + P&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D + P&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Solaris&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D + P&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D + P&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;/&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;FreeBSD&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D + P&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D + P&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;/&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Windows&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D + P&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D + P&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;/&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Mac OS X&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;/&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="Translation" scheme="http://cloudnoter.com/categories/Translation/"/>
    
    
      <category term="ZooKeeper" scheme="http://cloudnoter.com/tags/ZooKeeper/"/>
    
  </entry>
  
  <entry>
    <title>JVM方法区(PermGen)内存快速飙升问题</title>
    <link href="http://cloudnoter.com/2017/05/07/JVM%E6%96%B9%E6%B3%95%E5%8C%BA-PermGen-%E5%86%85%E5%AD%98%E5%BF%AB%E9%80%9F%E9%A3%99%E5%8D%87%E9%97%AE%E9%A2%98/"/>
    <id>http://cloudnoter.com/2017/05/07/JVM方法区-PermGen-内存快速飙升问题/</id>
    <published>2017-05-07T07:01:22.000Z</published>
    <updated>2017-05-07T13:48:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>自从平台升级到3.0后，应用的JVM变得非常不稳定，主要体现为以下三个问题：</p>
<ol>
<li>内存泄漏：2G的JVM，2天就崩。</li>
<li>方法区内存持续飙升，最终导致频繁的触发FullGC</li>
<li>class load频繁导致CPU有30%的资源浪费</li>
</ol>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="问题1解决思路："><a href="#问题1解决思路：" class="headerlink" title="问题1解决思路："></a><strong>问题1解决思路</strong>：</h3><p>问题1相对好解决，先用jmap将堆快照dump出来，用mat分析了下，根据GC-ROOT找到引用路径即可，泄漏原因为：平台自研JPA组件的SQLQuery在实现lazy load时，由于CGLib使用不当(在向当前线程注册回调方法拦截器时，在使用完之后未及时注销)导致的查询结果缓存被线程池中的线程引用，在线程池容量开得比较大时最终将导致OOM异常。</p>
<a id="more"></a>
<h3 id="问题2-3解决思路："><a href="#问题2-3解决思路：" class="headerlink" title="问题2,3解决思路："></a><strong>问题2,3解决思路</strong>：</h3><p>以前从没碰到这种情况，方法区的内存大小在应用启动后应该是处于一个相对稳定的状态（因为大部分类在启动时就已经加载完了，就算使用CGLib动态生成代理类也应该是有一个上限，最多就是全部类的一倍），但问题2明显不属于这种情况，不管开多大的内存给方法区（通过<code>-X:MaxPermSize=xxxM</code>设置大小），应用总能在几分钟内持续升到最高值并触发FullGC，GC结束后，方法区占用内存降至接近0M（此处就发生的<code>class unload</code>），然后又进入新一轮的飙升周期（此处就发生<code>class loader</code>）。</p>
<p>刚开始以为仍然是JPA组件使用CGLib不当的问题，认为是为了实现<code>lazy load</code>及权限控制时使用了过多的动态代理（每个<code>Action,Model,Service</code>都被创建为动态代理，更不合理的时每个model的get方法都使用<code>ProxyMethodInterceptor</code>，问当事人原因，其答复说为了<code>lazy load</code>，但其实只有关联字段，集合字段才有必要<code>lazy load</code>）。基于此做了修改，但测试结果还是没解决问题：因为JPA中并不是每次都创建一个新的proxy，而是根据class做了缓存的，因此只能另找办法。</p>
<p>既然是方法区的问题，那是否可以将方法区的内容dump出来呢？于是查看了下<code>jmap</code>参数，其中的有<code>-permstat</code>可以用：<code>jmap -permstat &lt;pid&gt;</code><br>结果如下（截取）</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="number">25007</span> intern Strings occupying <span class="number">2799672</span> bytes.  </div><div class="line">class_loader classesbytes parent_loaderalive? type  </div><div class="line">  </div><div class="line">  </div><div class="line">&lt;bootstrap&gt; <span class="number">262415108248</span>  null  live &lt;internal&gt;  </div><div class="line"><span class="number">0x000000076f045910</span> <span class="number">38758792</span> <span class="number">0x00000007617d4f70dead</span> com/atomikos/util/ClassLoadingHelper$<span class="number">1</span>@<span class="number">0x0000000741cb86e8</span>  </div><div class="line"><span class="number">0x000000076f942f10</span> <span class="number">38758792</span> <span class="number">0x00000007617d4f70dead</span> com/atomikos/util/ClassLoadingHelper$<span class="number">1</span>@<span class="number">0x0000000741cb86e8</span>  </div><div class="line"><span class="number">0x00000007d00e9ba0</span> <span class="number">40816816</span> <span class="number">0x00000007617d4f70dead</span> com/atomikos/util/ClassLoadingHelper$<span class="number">1</span>@<span class="number">0x0000000741cb86e8</span>  </div><div class="line"><span class="number">0x00000007dd170c08</span> <span class="number">40816816</span> <span class="number">0x00000007617d4f70dead</span> com/atomikos/util/ClassLoadingHelper$<span class="number">1</span>@<span class="number">0x0000000741cb86e8</span>  </div><div class="line"><span class="number">0x000000079e2f0070</span> <span class="number">40816816</span> <span class="number">0x00000007617d4f70dead</span> com/atomikos/util/ClassLoadingHelper$<span class="number">1</span>@<span class="number">0x0000000741cb86e8</span>  </div><div class="line"><span class="number">0x00000007cd6b1140</span> <span class="number">13112</span>  null  dead sun/reflect/DelegatingClassLoader@<span class="number">0x0000000740067648</span>  </div><div class="line"><span class="number">0x000000076fb5d130</span> <span class="number">38758792</span> <span class="number">0x00000007617d4f70dead</span> com/atomikos/util/ClassLoadingHelper$<span class="number">1</span>@<span class="number">0x0000000741cb86e8</span>  </div><div class="line"><span class="number">0x000000076fbe47c0</span> <span class="number">38758792</span> <span class="number">0x00000007617d4f70dead</span> com/atomikos/util/ClassLoadingHelper$<span class="number">1</span>@<span class="number">0x0000000741cb86e8</span></div></pre></td></tr></table></figure>
<p><code>com/atomikos/util/ClassLoadingHelper$1</code>：是一个匿名内部类（该类是一个加载器），通过这个内部类加载器作为JDK <code>Proxy.newProxyInstance()</code>方法的参数，而后者就会生产大量的以Proxy$为前缀的动态类，并且未做任何缓存。<br>atomikos大家应该都很清楚：JTA的一个实现，但是哪个组件调用了这个工具类呢？通过断点分析，原来是JPA又自己写了个什么数据库连接池，池中的每个连接都是<code>ProxyConnection</code>，而池又好像失效的，频繁的回收，创建…</p>
<blockquote>
<p>到目前为止，我一直没搞清楚为何要用代理类型的连接，这代理的作用从代码中也没看出个门道来，也不是为做监控。</p>
</blockquote>
<p>原因定位到了，解决办法就很简单了：直接用阿里的druid替换掉。测试结果证明前面的分析是正确的。</p>
<blockquote>
<p>转载请注明出处：<a href="http://cloudnoter.com">cloudnoter.com</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;自从平台升级到3.0后，应用的JVM变得非常不稳定，主要体现为以下三个问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;内存泄漏：2G的JVM，2天就崩。&lt;/li&gt;
&lt;li&gt;方法区内存持续飙升，最终导致频繁的触发FullGC&lt;/li&gt;
&lt;li&gt;class load频繁导致CPU有30%的资源浪费&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;headerlink&quot; title=&quot;解决方案&quot;&gt;&lt;/a&gt;解决方案&lt;/h2&gt;&lt;h3 id=&quot;问题1解决思路：&quot;&gt;&lt;a href=&quot;#问题1解决思路：&quot; class=&quot;headerlink&quot; title=&quot;问题1解决思路：&quot;&gt;&lt;/a&gt;&lt;strong&gt;问题1解决思路&lt;/strong&gt;：&lt;/h3&gt;&lt;p&gt;问题1相对好解决，先用jmap将堆快照dump出来，用mat分析了下，根据GC-ROOT找到引用路径即可，泄漏原因为：平台自研JPA组件的SQLQuery在实现lazy load时，由于CGLib使用不当(在向当前线程注册回调方法拦截器时，在使用完之后未及时注销)导致的查询结果缓存被线程池中的线程引用，在线程池容量开得比较大时最终将导致OOM异常。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://cloudnoter.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://cloudnoter.com/tags/Java/"/>
    
      <category term="JVM" scheme="http://cloudnoter.com/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>HA专题--Pacemaker集群日常管理命令</title>
    <link href="http://cloudnoter.com/2017/04/29/HA%E4%B8%93%E9%A2%98-Pacemaker%E6%97%A5%E5%B8%B8%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4/"/>
    <id>http://cloudnoter.com/2017/04/29/HA专题-Pacemaker日常管理命令/</id>
    <published>2017-04-29T13:20:49.000Z</published>
    <updated>2017-05-07T13:48:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>Pacemaker的管理工具主要有两种：crmsh、pcs(Pacemaker/Corosync configuration system)，本文将同时介绍这两种命令行工具。</p>
<blockquote>
<p>从CentOS6.4以后开始采用PCS替代crmsh来管理pacemaker集群（PCS专用于pacemaker+corosync的设置工具，其有CLI和web-based GUI界面）<br>文档来源于Pacemaker的<a href="https://github.com/ClusterLabs/pacemaker/blob/master/doc/pcs-crmsh-quick-ref.md" target="_blank" rel="external">Github官网</a></p>
</blockquote>
<a id="more"></a>
<h1 id="通用操作"><a href="#通用操作" class="headerlink" title="通用操作"></a>通用操作</h1><h2 id="显示配置信息"><a href="#显示配置信息" class="headerlink" title="显示配置信息"></a>显示配置信息</h2><p>以XML格式显示</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># crmsh </span></div><div class="line">crm configure show <span class="keyword">xml</span></div><div class="line"><span class="title"># pcs</span> </div><div class="line">pcs cluster cib</div></pre></td></tr></table></figure>
<p>以非XML格式显示[To show a simplified (non-xml) syntax]</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># crmsh</span></div><div class="line">crm configure <span class="keyword">show</span></div><div class="line"><span class="comment"># pcs</span></div><div class="line">pcs <span class="built_in">config</span></div></pre></td></tr></table></figure>
<h2 id="显示集群当前状态"><a href="#显示集群当前状态" class="headerlink" title="显示集群当前状态"></a>显示集群当前状态</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> crmsh</span></div><div class="line">crm status</div><div class="line"><span class="meta">#</span><span class="bash">pcs</span></div><div class="line">pcs status</div></pre></td></tr></table></figure>
<p>也可以这样：</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">crm_mon <span class="number">-1</span></div></pre></td></tr></table></figure>
<h2 id="挂起节点（Node-standby）"><a href="#挂起节点（Node-standby）" class="headerlink" title="挂起节点（Node standby）"></a>挂起节点（Node standby）</h2><p>使节点进入Standby状态（Put node in standby）</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># crmsh</span></div><div class="line">crm <span class="keyword">node</span> <span class="title">standby</span> pcmk-<span class="number">1</span></div><div class="line"><span class="comment"># pcs</span></div><div class="line">pcs cluster standby pcmk-<span class="number">1</span></div></pre></td></tr></table></figure>
<p>使节点从Standby状态恢复（Remove node from standby）</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># crmsh</span></div><div class="line">crm <span class="keyword">node</span> <span class="title">online</span> pcmk-<span class="number">1</span></div><div class="line"><span class="comment"># pcs</span></div><div class="line">pcs cluster unstandby pcmk-<span class="number">1</span></div></pre></td></tr></table></figure>
<p>crm has the ability to set the status on reboot or forever.<br>pcs can apply the change to all the nodes.</p>
<h2 id="设置集群全局属性"><a href="#设置集群全局属性" class="headerlink" title="设置集群全局属性"></a>设置集群全局属性</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># crmsh</span></div><div class="line">crm configure <span class="keyword">property</span><span class="title"> </span><span class="attr">stonith-enabled=</span><span class="literal">false</span></div><div class="line"><span class="comment"># pcs</span></div><div class="line">pcs <span class="keyword">property</span><span class="title"> </span>set <span class="attr">stonith-enabled=</span><span class="literal">false</span></div></pre></td></tr></table></figure>
<h1 id="集群资源处理操作"><a href="#集群资源处理操作" class="headerlink" title="集群资源处理操作"></a>集群资源处理操作</h1><h2 id="列出所有RA-Resource-Agent-的类别-classes"><a href="#列出所有RA-Resource-Agent-的类别-classes" class="headerlink" title="列出所有RA(Resource Agent)的类别:classes"></a>列出所有RA(Resource Agent)的类别:<code>classes</code></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> crmsh</span></div><div class="line">crm ra classes</div><div class="line"><span class="meta">#</span><span class="bash"> pcs</span></div><div class="line">pcs resource standards</div></pre></td></tr></table></figure>
<h2 id="列出所有可用的RA"><a href="#列出所有可用的RA" class="headerlink" title="列出所有可用的RA"></a>列出所有可用的RA</h2><figure class="highlight sqf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># crmsh</span></div><div class="line">crm ra <span class="built_in">list</span> ocf</div><div class="line">crm ra <span class="built_in">list</span> lsb</div><div class="line">crm ra <span class="built_in">list</span> service</div><div class="line">crm ra <span class="built_in">list</span> stonith</div><div class="line"></div><div class="line"><span class="meta"># pcs</span></div><div class="line">pcs resource <span class="built_in">agents</span> ocf</div><div class="line">pcs resource <span class="built_in">agents</span> lsb</div><div class="line">pcs resource <span class="built_in">agents</span> service</div><div class="line">pcs resource <span class="built_in">agents</span> stonith</div><div class="line">pcs resource <span class="built_in">agents</span></div></pre></td></tr></table></figure>
<p>您也可以通过<code>provider</code>进一步过滤：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> crmsh</span></div><div class="line">crm ra list ocf pacemaker</div><div class="line"><span class="meta">#</span><span class="bash"> pcs</span></div><div class="line">pcs resource agents ocf:pacemaker</div></pre></td></tr></table></figure>
<h2 id="查询具体RA的描述信息"><a href="#查询具体RA的描述信息" class="headerlink" title="查询具体RA的描述信息"></a>查询具体RA的描述信息</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> crmsh</span></div><div class="line">crm ra meta IPaddr2</div><div class="line"><span class="meta">#</span><span class="bash"> pcs</span></div><div class="line">pcs resource describe IPaddr2</div></pre></td></tr></table></figure>
<p>Use any RA name (like IPaddr2) from the list displayed with the previous command<br>You can also use the full class:provider:RA format if multiple RAs with the same name are available :</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># <span class="selector-tag">crmsh</span></div><div class="line"><span class="selector-tag">crm</span> <span class="selector-tag">ra</span> <span class="selector-tag">meta</span> <span class="selector-tag">ocf</span><span class="selector-pseudo">:heartbeat</span><span class="selector-pseudo">:IPaddr2</span></div><div class="line"># <span class="selector-tag">pcs</span></div><div class="line"><span class="selector-tag">pcs</span> <span class="selector-tag">resource</span> <span class="selector-tag">describe</span> <span class="selector-tag">ocf</span><span class="selector-pseudo">:heartbeat</span><span class="selector-pseudo">:IPaddr2</span></div></pre></td></tr></table></figure>
<h2 id="创建资源"><a href="#创建资源" class="headerlink" title="创建资源"></a>创建资源</h2><figure class="highlight smali"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># crmsh</span></div><div class="line">crm configure primitive ClusterIP ocf:heartbeat:IPaddr2 \</div><div class="line">       params ip=192.168.122.120 cidr_netmask=32 \</div><div class="line">       op<span class="built_in"> monitor </span>interval=30s </div><div class="line"><span class="comment"># pcs</span></div><div class="line">pcs resource create ClusterIP IPaddr2 ip=192.168.0.120 cidr_netmask=32</div></pre></td></tr></table></figure>
<p>The standard and provider (<code>ocf:heartbeat</code>) are determined automatically since <code>IPaddr2</code> is unique.<br>The monitor operation is automatically created based on the agent’s metadata.</p>
<h2 id="显示资源配置信息"><a href="#显示资源配置信息" class="headerlink" title="显示资源配置信息"></a>显示资源配置信息</h2><figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># crmsh</span></div><div class="line">crm configure <span class="keyword">show</span></div><div class="line"><span class="meta"># pcs</span></div><div class="line">pcs resource <span class="keyword">show</span></div></pre></td></tr></table></figure>
<p>crmsh also displays fencing resources.<br>The result can be filtered by supplying a resource name (IE <code>ClusterIP</code>):</p>
<figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># crmsh</span></div><div class="line">crm configure <span class="keyword">show</span> ClusterIP</div><div class="line"><span class="meta"># pcs</span></div><div class="line">pcs resource <span class="keyword">show</span> ClusterIP</div></pre></td></tr></table></figure>
<p>crmsh also displays fencing resources. </p>
<h2 id="显示fencing资源"><a href="#显示fencing资源" class="headerlink" title="显示fencing资源"></a>显示fencing资源</h2><figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># crmsh</span></div><div class="line">crm resource <span class="keyword">show</span></div><div class="line"><span class="meta"># pcs</span></div><div class="line">pcs stonith <span class="keyword">show</span></div></pre></td></tr></table></figure>
<p>pcs treats STONITH devices separately.</p>
<h2 id="显示Stonith资源代码-RA-信息"><a href="#显示Stonith资源代码-RA-信息" class="headerlink" title="显示Stonith资源代码(RA)信息"></a>显示Stonith资源代码(RA)信息</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> crmsh</span></div><div class="line">crm ra meta stonith:fence_ipmilan</div><div class="line"><span class="meta">#</span><span class="bash"> pcs</span></div><div class="line">pcs stonith describe fence_ipmilan</div></pre></td></tr></table></figure>
<h2 id="启动资源"><a href="#启动资源" class="headerlink" title="启动资源"></a>启动资源</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> crmsh</span></div><div class="line">crm resource start ClusterIP</div><div class="line"><span class="meta">#</span><span class="bash"> pcs</span></div><div class="line">pcs resource enable ClusterIP</div></pre></td></tr></table></figure>
<h2 id="停止资源"><a href="#停止资源" class="headerlink" title="停止资源"></a>停止资源</h2><figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># crmsh</span></div><div class="line">crm resource <span class="keyword">stop</span> ClusterIP</div><div class="line"><span class="meta"># pcs</span></div><div class="line">pcs resource <span class="keyword">disable</span> ClusterIP</div></pre></td></tr></table></figure>
<h2 id="删除资源"><a href="#删除资源" class="headerlink" title="删除资源"></a>删除资源</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># crmsh</span></div><div class="line">crm configure <span class="keyword">delete</span> ClusterIP</div><div class="line"><span class="meta"># pcs</span></div><div class="line">pcs resource <span class="keyword">delete</span> ClusterIP</div></pre></td></tr></table></figure>
<h2 id="更新资源"><a href="#更新资源" class="headerlink" title="更新资源"></a>更新资源</h2><figure class="highlight vala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># crmsh</span></div><div class="line">crm resource param ClusterIP <span class="keyword">set</span> clusterip_hash=sourceip</div><div class="line"><span class="meta"># pcs</span></div><div class="line">pcs resource update ClusterIP clusterip_hash=sourceip</div></pre></td></tr></table></figure>
<p>crmsh also has an <code>edit</code> command which edits the simplified CIB syntax<br>(same commands as the command line) via a configurable text editor.</p>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># crmsh</span></div><div class="line">crm configure <span class="keyword">edit</span> ClusterIP</div></pre></td></tr></table></figure>
<p>Using the interactive shell mode of crmsh, multiple changes can be<br>edited and verified before committing to the live configuration.</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> crmsh</span></div><div class="line"><span class="meta">node-01$</span><span class="bash"> crm configure <span class="comment"># 进入crmsh上下文模式</span></span></div><div class="line"><span class="meta">crm(live)configure$</span><span class="bash"> edit</span></div><div class="line"><span class="meta">crm(live)configure$</span><span class="bash"> verify</span></div><div class="line"><span class="meta">crm(live)configure$</span><span class="bash"> commit</span></div></pre></td></tr></table></figure>
<h2 id="删除给定资源上的属性信息"><a href="#删除给定资源上的属性信息" class="headerlink" title="删除给定资源上的属性信息"></a>删除给定资源上的属性信息</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># crmsh</span></div><div class="line">crm resource <span class="built_in">param</span> ClusterIP <span class="built_in">delete</span> nic</div><div class="line"><span class="comment"># pcs</span></div><div class="line">pcs resource update ClusterIP ip=<span class="number">192.168</span><span class="number">.0</span><span class="number">.98</span> nic=</div></pre></td></tr></table></figure>
<h2 id="列出资源的默认属性信息"><a href="#列出资源的默认属性信息" class="headerlink" title="列出资源的默认属性信息"></a>列出资源的默认属性信息</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># crmsh</span></div><div class="line">crm configure show <span class="keyword">type</span>:<span class="keyword">rsc_defaults</span><span class="title"></span></div><div class="line"><span class="comment"># pcs</span></div><div class="line">pcs resource defaults</div></pre></td></tr></table></figure>
<h2 id="设置资源的默认属性信息"><a href="#设置资源的默认属性信息" class="headerlink" title="设置资源的默认属性信息"></a>设置资源的默认属性信息</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># crmsh</span></div><div class="line">crm configure <span class="keyword">rsc_defaults</span><span class="title"> </span><span class="attr">resource-stickiness=</span><span class="number">100</span></div><div class="line"><span class="comment"># pcs</span></div><div class="line">pcs resource defaults <span class="attr">resource-stickiness=</span><span class="number">100</span></div></pre></td></tr></table></figure>
<h2 id="列出资源操作命令相关属性的默认值"><a href="#列出资源操作命令相关属性的默认值" class="headerlink" title="列出资源操作命令相关属性的默认值"></a>列出资源操作命令相关属性的默认值</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># crmsh</span></div><div class="line">crm configure show <span class="keyword">type</span>:<span class="keyword">op_defaults</span><span class="title"></span></div><div class="line"><span class="comment"># pcs</span></div><div class="line">pcs resource <span class="keyword">op</span> defaults</div></pre></td></tr></table></figure>
<h2 id="设置资源操作命令相关属性的默认值"><a href="#设置资源操作命令相关属性的默认值" class="headerlink" title="设置资源操作命令相关属性的默认值"></a>设置资源操作命令相关属性的默认值</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># crmsh</span></div><div class="line">crm configure <span class="keyword">op_defaults</span><span class="title"> </span><span class="attr">timeout=</span><span class="number">240s</span></div><div class="line"><span class="comment"># pcs</span></div><div class="line">pcs resource <span class="keyword">op</span> defaults <span class="attr">timeout=</span><span class="number">240s</span></div></pre></td></tr></table></figure>
<h2 id="设置Colocation约束"><a href="#设置Colocation约束" class="headerlink" title="设置Colocation约束"></a>设置Colocation约束</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># crmsh</span></div><div class="line">crm configure <span class="keyword">colocation</span> <span class="title">website-with-ip</span> <span class="literal">INFINITY</span>: WebSite ClusterIP</div><div class="line"><span class="comment"># pcs</span></div><div class="line">pcs constraint <span class="keyword">colocation</span> <span class="title">add</span> ClusterIP with WebSite <span class="literal">INFINITY</span></div></pre></td></tr></table></figure>
<p>With roles</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># crmsh</span></div><div class="line">crm configure <span class="keyword">colocation</span> <span class="title">another-ip-with-website</span> <span class="literal">inf</span>: AnotherIP WebSite:<span class="keyword">Master</span></div><div class="line"><span class="title"># pcs</span></div><div class="line">pcs constraint <span class="keyword">colocation</span> <span class="title">add</span> <span class="literal">Started</span> AnotherIP with <span class="keyword">Master</span> <span class="title">WebSite</span> <span class="literal">INFINITY</span></div></pre></td></tr></table></figure>
<h2 id="设置ordering约束"><a href="#设置ordering约束" class="headerlink" title="设置ordering约束"></a>设置ordering约束</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># crmsh</span></div><div class="line">crm configure <span class="keyword">order</span> <span class="title">apache-after-ip</span> mandatory: ClusterIP WebSite</div><div class="line"><span class="comment"># pcs</span></div><div class="line">pcs constraint <span class="keyword">order</span> <span class="title">ClusterIP</span> then WebSite</div></pre></td></tr></table></figure>
<p>With roles:</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># crmsh</span></div><div class="line">crm configure <span class="keyword">order</span> <span class="title">ip-after-website</span> Mandatory: WebSite:<span class="keyword">Master</span> <span class="title">AnotherIP</span></div><div class="line"><span class="comment"># pcs</span></div><div class="line">pcs constraint <span class="keyword">order</span> <span class="title">promote</span> WebSite then <span class="literal">start</span> AnotherIP</div></pre></td></tr></table></figure>
<h2 id="设置preferred-location约束"><a href="#设置preferred-location约束" class="headerlink" title="设置preferred location约束"></a>设置preferred location约束</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># crmsh</span></div><div class="line">crm configure <span class="keyword">location</span> <span class="title">prefer-pcmk-1</span> WebSite <span class="number">50</span>: pcmk-<span class="number">1</span></div><div class="line"><span class="comment"># pcs</span></div><div class="line">pcs constraint <span class="keyword">location</span> <span class="title">WebSite</span> prefers <span class="attr">pcmk-1=</span><span class="number">50</span></div></pre></td></tr></table></figure>
<p>With roles:</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># crmsh</span></div><div class="line">crm configure <span class="keyword">location</span> <span class="title">prefer-pcmk-1</span> WebSite <span class="keyword">rule</span> <span class="attr">role=</span><span class="keyword">Master</span> <span class="title">50</span>: \<span class="comment">#uname eq pcmk-1</span></div><div class="line"><span class="comment"># pcs</span></div><div class="line">pcs constraint <span class="keyword">location</span> <span class="title">WebSite</span> <span class="keyword">rule</span> <span class="attr">role=</span><span class="keyword">master</span> <span class="title">50</span> \<span class="comment">#uname eq pcmk-1</span></div></pre></td></tr></table></figure>
<h2 id="移动资源至指定节点（Move-resources）"><a href="#移动资源至指定节点（Move-resources）" class="headerlink" title="移动资源至指定节点（Move resources）"></a>移动资源至指定节点（Move resources）</h2><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">crm resource <span class="built_in">move</span> WebSite pcmk<span class="number">-1</span></div><div class="line">pcs resource <span class="built_in">move</span> WebSite pcmk<span class="number">-1</span></div><div class="line">    </div><div class="line">crm resource unmove WebSite</div><div class="line">pcs resource <span class="built_in">clear</span> WebSite</div></pre></td></tr></table></figure>
<p>A resource can also be moved away from a given node:</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">crm</span> resource <span class="keyword">ban </span>Website pcmk-<span class="number">2</span></div><div class="line"><span class="symbol">pcs</span> resource <span class="keyword">ban </span>Website pcmk-<span class="number">2</span></div></pre></td></tr></table></figure>
<p>Remember that moving a resource sets a stickyness to -INF to a given node until unmoved    </p>
<h2 id="Resource-tracing"><a href="#Resource-tracing" class="headerlink" title="Resource tracing"></a>Resource tracing</h2><figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">crm resource <span class="keyword">trace</span> Website</div><div class="line"><span class="meta"># pcs不支持</span></div></pre></td></tr></table></figure>
<h2 id="清理指定资源的失败计数信息（Clear-fail-counts）"><a href="#清理指定资源的失败计数信息（Clear-fail-counts）" class="headerlink" title="清理指定资源的失败计数信息（Clear fail counts）"></a>清理指定资源的失败计数信息（Clear fail counts）</h2><figure class="highlight llvm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">crm resource <span class="keyword">cleanup</span> Website</div><div class="line">pcs resource <span class="keyword">cleanup</span> Website</div></pre></td></tr></table></figure>
<h2 id="编辑Edit-fail-counts"><a href="#编辑Edit-fail-counts" class="headerlink" title="编辑Edit fail counts"></a>编辑Edit fail counts</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">crm resource failcount Website show pcmk<span class="number">-1</span></div><div class="line">crm resource failcount Website set pcmk<span class="number">-1</span> <span class="number">100</span></div><div class="line">    </div><div class="line"># pcs不支持</div></pre></td></tr></table></figure>
<h2 id="Handling-configuration-elements-by-type"><a href="#Handling-configuration-elements-by-type" class="headerlink" title="Handling configuration elements by type"></a>Handling configuration elements by type</h2><p>pcs deals with constraints differently. These can be manipulated by the command above as well as the following and others</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># 下面这行命令的<span class="keyword">list</span>可以省略，使用full选项是为了显示相关的id</div><div class="line">pcs <span class="keyword">constraint</span> <span class="keyword">list</span> --full </div><div class="line">pcs <span class="keyword">constraint</span> remove <span class="keyword">cli</span>-ban-Website-<span class="keyword">on</span>-pcmk-1</div></pre></td></tr></table></figure>
<p>使用crmsh命令删除约束的方式与删除资源的命令一样<br>Removing a constraint in crmsh uses the same command as removing a resource.</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">crm configure remove cli-ban-Website-<span class="keyword">on</span>-pcmk<span class="number">-1</span></div></pre></td></tr></table></figure>
<p>The <code>show</code> and <code>edit</code> commands in crmsh can be used to manage<br>resources and constraints by type:</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">crm configure show <span class="keyword">type</span>:<span class="keyword">primitive</span><span class="title"></span></div><div class="line">crm configure edit <span class="keyword">type</span>:colocation</div></pre></td></tr></table></figure>
<h2 id="Create-a-clone"><a href="#Create-a-clone" class="headerlink" title="Create a clone"></a>Create a clone</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">crm configure <span class="keyword">clone</span> <span class="title">WebIP</span> ClusterIP <span class="keyword">meta</span> <span class="attr">globally-unique=</span><span class="literal">true</span> <span class="attr">clone-max=</span><span class="number">2</span> <span class="attr">clone-node-max=</span><span class="number">2</span></div><div class="line">pcs resource <span class="keyword">clone</span> <span class="title">ClusterIP</span> <span class="attr">globally-unique=</span><span class="literal">true</span> <span class="attr">clone-max=</span><span class="number">2</span> <span class="attr">clone-node-max=</span><span class="number">2</span></div></pre></td></tr></table></figure>
<h2 id="Create-a-master-slave-clone"><a href="#Create-a-master-slave-clone" class="headerlink" title="Create a master/slave clone"></a>Create a master/slave clone</h2><figure class="highlight glsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">crm configure ms WebDataClone WebData \</div><div class="line">    meta master-<span class="built_in">max</span>=<span class="number">1</span> master-node-<span class="built_in">max</span>=<span class="number">1</span> \</div><div class="line">    clone-<span class="built_in">max</span>=<span class="number">2</span> clone-node-<span class="built_in">max</span>=<span class="number">1</span> notify=<span class="literal">true</span></div><div class="line">pcs resource master WebDataClone WebData \</div><div class="line">    master-<span class="built_in">max</span>=<span class="number">1</span> master-node-<span class="built_in">max</span>=<span class="number">1</span> \</div><div class="line">    clone-<span class="built_in">max</span>=<span class="number">2</span> clone-node-<span class="built_in">max</span>=<span class="number">1</span> notify=<span class="literal">true</span></div></pre></td></tr></table></figure>
<h1 id="其它操作"><a href="#其它操作" class="headerlink" title="其它操作"></a>其它操作</h1><h2 id="批量修改配置信息"><a href="#批量修改配置信息" class="headerlink" title="批量修改配置信息"></a>批量修改配置信息</h2><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># crmsh通过crm命令进入crmsh上下文模式，直接对CIB文档结构进行操作，最后再一次性commit</span></div><div class="line">crmsh <span class="comment"># crm</span></div><div class="line">crmsh <span class="comment"># cib new drbd_cfg</span></div><div class="line">crmsh <span class="comment"># configure primitive WebData ocf:linbit:drbd params drbd_resource=wwwdata \</span></div><div class="line">        op monitor <span class="attr">interval=60s</span></div><div class="line">crmsh <span class="comment"># configure ms WebDataClone WebData meta master-max=1 master-node-max=1 \</span></div><div class="line">        <span class="attr">clone-max=2</span> <span class="attr">clone-node-max=1</span> <span class="attr">notify=true</span></div><div class="line">crmsh <span class="comment"># cib commit drbd_cfg</span></div><div class="line">crmsh <span class="comment"># quit</span></div><div class="line"></div><div class="line"><span class="comment"># pcs则先基于本地文件方式批量设置CIB参数，然后再通过push操作使配置生效</span></div><div class="line">pcs   <span class="comment"># pcs cluster cib drbd_cfg</span></div><div class="line">pcs   <span class="comment"># pcs -f drbd_cfg resource create WebData ocf:linbit:drbd drbd_resource=wwwdata \</span></div><div class="line">        op monitor <span class="attr">interval=60s</span></div><div class="line">pcs   <span class="comment"># pcs -f drbd_cfg resource master WebDataClone WebData master-max=1 master-node-max=1 \</span></div><div class="line">        <span class="attr">clone-max=2</span> <span class="attr">clone-node-max=1</span> <span class="attr">notify=true</span></div><div class="line">pcs   <span class="comment"># pcs cluster push cib drbd_cfg</span></div></pre></td></tr></table></figure>
<h2 id="创建模板（Template-creation）"><a href="#创建模板（Template-creation）" class="headerlink" title="创建模板（Template creation）"></a>创建模板（Template creation）</h2><p>Create a resource template based on a list of primitives of the same<br>type</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">crm configure assist <span class="keyword">template</span> ClusterIP AdminIP</div></pre></td></tr></table></figure>
<h2 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h2><p>Display information about recent cluster events</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">crmsh # crm <span class="keyword">history</span></div><div class="line">crmsh # peinputs</div><div class="line">crmsh # transition <span class="keyword">pe</span>-<span class="built_in">input</span>-<span class="number">10</span></div><div class="line">crmsh # transition <span class="built_in">log</span> <span class="keyword">pe</span>-<span class="built_in">input</span>-<span class="number">10</span></div></pre></td></tr></table></figure>
<h2 id="Configuration-scripts"><a href="#Configuration-scripts" class="headerlink" title="Configuration scripts"></a>Configuration scripts</h2><p>Create and apply multiple-step cluster configurations including<br>configuration of cluster resources</p>
<figure class="highlight livescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">crmsh <span class="comment"># crm script show apache</span></div><div class="line">crmsh <span class="comment"># crm script run apache \</span></div><div class="line">    id=WebSite <span class="string">\</span></div><div class="line">    install=<span class="literal">true</span> <span class="string">\</span></div><div class="line">    virtual-ip:ip=<span class="number">192.168</span>.<span class="number">0.15</span> <span class="string">\</span></div><div class="line">    database:id=WebData <span class="string">\</span></div><div class="line">    database:install=<span class="literal">true</span></div></pre></td></tr></table></figure>
<blockquote>
<p>转载请注明出处：<a href="http://cloudnoter.com">cloudnoter.com</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;Pacemaker的管理工具主要有两种：crmsh、pcs(Pacemaker/Corosync configuration system)，本文将同时介绍这两种命令行工具。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;从CentOS6.4以后开始采用PCS替代crmsh来管理pacemaker集群（PCS专用于pacemaker+corosync的设置工具，其有CLI和web-based GUI界面）&lt;br&gt;文档来源于Pacemaker的&lt;a href=&quot;https://github.com/ClusterLabs/pacemaker/blob/master/doc/pcs-crmsh-quick-ref.md&quot;&gt;Github官网&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="HA" scheme="http://cloudnoter.com/categories/HA/"/>
    
    
      <category term="HA" scheme="http://cloudnoter.com/tags/HA/"/>
    
      <category term="Pacemaker" scheme="http://cloudnoter.com/tags/Pacemaker/"/>
    
      <category term="crmsh" scheme="http://cloudnoter.com/tags/crmsh/"/>
    
      <category term="pcs" scheme="http://cloudnoter.com/tags/pcs/"/>
    
  </entry>
  
  <entry>
    <title>Java小问题汇总</title>
    <link href="http://cloudnoter.com/2016/11/09/Java%E5%B0%8F%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    <id>http://cloudnoter.com/2016/11/09/Java小问题汇总/</id>
    <published>2016-11-08T22:09:00.000Z</published>
    <updated>2017-05-07T13:47:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-MySQL5-7下的JSON字段中文乱码问题"><a href="#1-MySQL5-7下的JSON字段中文乱码问题" class="headerlink" title="1. MySQL5.7下的JSON字段中文乱码问题"></a>1. MySQL5.7下的JSON字段中文乱码问题</h2><p>中文乱码问题在Java Web开发中经常碰到，大部分原因是后端与前端的编码不一致造成的（如tomcat的默认编码为ISO-8859-1，而前端为GBK），解决办法也简单，只需要加一个<code>CharsetEncodingFilter</code>就行。但本文要讲的不是这一类总是，而是纯粹的后端问题。</p>
<h3 id="1-1-环境准备"><a href="#1-1-环境准备" class="headerlink" title="1.1 环境准备"></a>1.1 环境准备</h3><blockquote>
<p>假设MySQL的默认CharSet为UTF-8，应用及部署环境也为UTF-8</p>
</blockquote>
<ul>
<li>创建包含JSON字段的数据库表</li>
</ul>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">"ipms_device_feature"</span> (</div><div class="line">  <span class="string">"ID"</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</div><div class="line">  <span class="string">"DEVICE_SERIAL_NUMBER"</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'设备SN'</span>,</div><div class="line">  <span class="string">"DEVICE_IP"</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'设备IP'</span>,</div><div class="line">  <span class="string">"FEATURES"</span> <span class="keyword">json</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'设备巡检指标集'</span>,</div><div class="line">  <span class="string">"UPDATETIME"</span> <span class="keyword">timestamp</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</div><div class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">"ID"</span>)</div><div class="line">)</div></pre></td></tr></table></figure>
<a id="more"></a>
<ul>
<li>运行如下脚本查看字段详细信息</li>
</ul>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">show</span> <span class="keyword">full</span> <span class="keyword">fields</span> <span class="keyword">from</span> ipms_device_feature</div></pre></td></tr></table></figure>
<p>结果如下：<br><img src="http://oaivivmzx.bkt.clouddn.com/mysql_json.jpg" alt="mysql_json"></p>
<blockquote>
<p>上图中<code>features</code>这个字段的<code>Collation</code>列为<code>Null</code></p>
</blockquote>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># 使用如下SQL时，JDBC在解析返回的数据（包含中文）时会出现乱码</span></div><div class="line"><span class="keyword">select</span> features <span class="keyword">from</span> ipms_device_feature</div></pre></td></tr></table></figure>
<ul>
<li>解决办法</li>
</ul>
<p>第一步：使用MySQL提供的json_unquote方法</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">select</span> <span class="title">json_unquote</span>(<span class="params">features</span>) <span class="keyword">as</span> features <span class="keyword">from</span> ipms_device_feature</span></div></pre></td></tr></table></figure>
<p>第二步：在Java中调用上面的SQL时，将会返回一个<code>byte</code>数组，因此只需要通过<code>String</code>提供的方法进行转码就行。</p>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">List</span>&lt;<span class="built_in">Map</span>&gt; rows = em.createNamedQuery(<span class="string">"XXX"</span>).list();</div><div class="line"><span class="keyword">for</span>(<span class="built_in">Map</span> row : rows) &#123;</div><div class="line">	byte[] bytes = (byte[]) row.<span class="keyword">get</span>(<span class="string">"features"</span>);</div><div class="line">	<span class="built_in">String</span> features = <span class="keyword">new</span> <span class="built_in">String</span>(bytes, <span class="string">"UTF-8"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这样的话，Java变更<code>features</code>就是正常的中文，就可以直接回传给前端页面了。</p>
<h2 id="2-几个容易踩的坑"><a href="#2-几个容易踩的坑" class="headerlink" title="2. 几个容易踩的坑"></a>2. 几个容易踩的坑</h2><h3 id="2-1-Integer对象之间比较的坑"><a href="#2-1-Integer对象之间比较的坑" class="headerlink" title="2.1. Integer对象之间比较的坑"></a>2.1. <code>Integer</code>对象之间比较的坑</h3><p>对于<code>Integer var=?</code>在<code>-128</code>至<code>127</code>之间的赋值，<code>Integer</code> 对象是在<code>IntegerCache.cache</code>产生，会复用已有对象，这个区间内的<code>Integer</code>值可以直接使用==进行判断，但是这个区间之外的所有数据，都会在堆上产生，并不会复用已有对象。因此建议<code>Integer</code>对象在比较时应使用<code>equals</code>方法。</p>
<h3 id="2-2-ArrayList的subList-方法返回值的坑"><a href="#2-2-ArrayList的subList-方法返回值的坑" class="headerlink" title="2.2. ArrayList的subList()方法返回值的坑"></a>2.2. <code>ArrayList</code>的<code>subList()</code>方法返回值的坑</h3><p><code>ArrayList</code>的<code>subList</code>方法返回的结果不可强转成<code>ArrayList</code>，否则会抛出<code>ClassCastException</code>异常：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">java</span><span class="selector-class">.util</span><span class="selector-class">.RandomAccessSubList</span> <span class="selector-tag">cannot</span> <span class="selector-tag">be</span> <span class="selector-tag">cast</span> <span class="selector-tag">to</span> <span class="selector-tag">java</span><span class="selector-class">.util</span><span class="selector-class">.ArrayList</span>;</div></pre></td></tr></table></figure>
<p>因为<code>subList</code>方法返回的是<code>ArrayList</code>的内部类<code>SubList</code>，并不是<code>ArrayList</code>，而是<code>ArrayList</code>的一个视图，对于内部类<code>SubList</code>的所有操作最终会反映到原列表上。</p>
<h3 id="2-3-Arrays-asList-方法返回值的坑"><a href="#2-3-Arrays-asList-方法返回值的坑" class="headerlink" title="2.3. Arrays.asList()方法返回值的坑"></a>2.3. <code>Arrays.asList()</code>方法返回值的坑</h3><p>使用工具类<code>Arrays.asList()</code>把数组转换成集合时，不能使用其修改集合相关的方法，它的 <code>add/remove/clear</code>方法会抛出<code>UnsupportedOperationException</code>异常。因为<code>asList</code>方法的返回对象是一个<code>Arrays</code>内部类，并没有实现集合的修改方法。<code>Arrays.asList</code>体现的是适配器模式，只是转换接口，后台的数据仍是数组。</p>
 <figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">String</span>[] <span class="built_in">str</span> = <span class="keyword">new</span> <span class="keyword">String</span>[] &#123; <span class="string">"a"</span>, <span class="string">"b"</span> &#125;;</div><div class="line">List list = Arrays.asList(<span class="built_in">str</span>);</div><div class="line">list.<span class="built_in">add</span>(<span class="string">"c"</span>); <span class="comment">// 运行时异常。</span></div><div class="line"><span class="built_in">str</span>[<span class="number">0</span>]= <span class="string">"gujin"</span>; <span class="comment">// 则list.get(0)也会随之修改。</span></div></pre></td></tr></table></figure>
<h2 id="3-新版Eclipse-Neon运行Junit报NPE"><a href="#3-新版Eclipse-Neon运行Junit报NPE" class="headerlink" title="3. 新版Eclipse Neon运行Junit报NPE"></a>3. 新版Eclipse Neon运行Junit报NPE</h2><ul>
<li><strong>问题描述</strong>：在Eclipse中创建单元测试用例（项目依赖的版本为junit-4.4）时，报如下错误</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">java<span class="selector-class">.lang</span><span class="selector-class">.NullPointerException</span></div><div class="line">	at org<span class="selector-class">.eclipse</span><span class="selector-class">.jdt</span><span class="selector-class">.internal</span><span class="selector-class">.junit4</span><span class="selector-class">.runner</span><span class="selector-class">.SubForestFilter</span><span class="selector-class">.shouldRun</span>(SubForestFilter<span class="selector-class">.java</span>:<span class="number">81</span>)</div><div class="line">	at org<span class="selector-class">.junit</span><span class="selector-class">.internal</span><span class="selector-class">.runners</span><span class="selector-class">.JUnit4ClassRunner</span><span class="selector-class">.filter</span>(JUnit4ClassRunner<span class="selector-class">.java</span>:<span class="number">110</span>)</div><div class="line">	at org<span class="selector-class">.junit</span><span class="selector-class">.runner</span><span class="selector-class">.manipulation</span><span class="selector-class">.Filter</span><span class="selector-class">.apply</span>(Filter<span class="selector-class">.java</span>:<span class="number">47</span>)</div><div class="line">	at org<span class="selector-class">.junit</span><span class="selector-class">.internal</span><span class="selector-class">.requests</span><span class="selector-class">.FilterRequest</span><span class="selector-class">.getRunner</span>(FilterRequest<span class="selector-class">.java</span>:<span class="number">34</span>)</div><div class="line">	at org<span class="selector-class">.eclipse</span><span class="selector-class">.jdt</span><span class="selector-class">.internal</span><span class="selector-class">.junit4</span><span class="selector-class">.runner</span><span class="selector-class">.JUnit4TestLoader</span><span class="selector-class">.createFilteredTest</span>(JUnit4TestLoader<span class="selector-class">.java</span>:<span class="number">77</span>)</div><div class="line">	at org<span class="selector-class">.eclipse</span><span class="selector-class">.jdt</span><span class="selector-class">.internal</span><span class="selector-class">.junit4</span><span class="selector-class">.runner</span><span class="selector-class">.JUnit4TestLoader</span><span class="selector-class">.createTest</span>(JUnit4TestLoader<span class="selector-class">.java</span>:<span class="number">68</span>)</div><div class="line">	at org<span class="selector-class">.eclipse</span><span class="selector-class">.jdt</span><span class="selector-class">.internal</span><span class="selector-class">.junit4</span><span class="selector-class">.runner</span><span class="selector-class">.JUnit4TestLoader</span><span class="selector-class">.loadTests</span>(JUnit4TestLoader<span class="selector-class">.java</span>:<span class="number">43</span>)</div><div class="line">	at org<span class="selector-class">.eclipse</span><span class="selector-class">.jdt</span><span class="selector-class">.internal</span><span class="selector-class">.junit</span><span class="selector-class">.runner</span><span class="selector-class">.RemoteTestRunner</span><span class="selector-class">.runTests</span>(RemoteTestRunner<span class="selector-class">.java</span>:<span class="number">444</span>)</div><div class="line">	at org<span class="selector-class">.eclipse</span><span class="selector-class">.jdt</span><span class="selector-class">.internal</span><span class="selector-class">.junit</span><span class="selector-class">.runner</span><span class="selector-class">.RemoteTestRunner</span><span class="selector-class">.runTests</span>(RemoteTestRunner<span class="selector-class">.java</span>:<span class="number">678</span>)</div></pre></td></tr></table></figure>
<ul>
<li><p><strong>原因分析</strong>：新版Eclipse在启动单元测试用例时调用的是JUnit新版本的方法，即Eclipse已不支持junit4.9以下的版本。</p>
</li>
<li><p><strong>解决办法</strong>：升级JUnit依赖版本即可 </p>
</li>
</ul>
<h2 id="待续…"><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h2><blockquote>
<p>转载请注明出处：<a href="http://cloudnoter.com">cloudnoter.com</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-MySQL5-7下的JSON字段中文乱码问题&quot;&gt;&lt;a href=&quot;#1-MySQL5-7下的JSON字段中文乱码问题&quot; class=&quot;headerlink&quot; title=&quot;1. MySQL5.7下的JSON字段中文乱码问题&quot;&gt;&lt;/a&gt;1. MySQL5.7下的JSON字段中文乱码问题&lt;/h2&gt;&lt;p&gt;中文乱码问题在Java Web开发中经常碰到，大部分原因是后端与前端的编码不一致造成的（如tomcat的默认编码为ISO-8859-1，而前端为GBK），解决办法也简单，只需要加一个&lt;code&gt;CharsetEncodingFilter&lt;/code&gt;就行。但本文要讲的不是这一类总是，而是纯粹的后端问题。&lt;/p&gt;
&lt;h3 id=&quot;1-1-环境准备&quot;&gt;&lt;a href=&quot;#1-1-环境准备&quot; class=&quot;headerlink&quot; title=&quot;1.1 环境准备&quot;&gt;&lt;/a&gt;1.1 环境准备&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;假设MySQL的默认CharSet为UTF-8，应用及部署环境也为UTF-8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;创建包含JSON字段的数据库表&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;ipms_device_feature&quot;&lt;/span&gt; (&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;ID&quot;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; AUTO_INCREMENT,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;DEVICE_SERIAL_NUMBER&quot;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;设备SN&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;DEVICE_IP&quot;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;设备IP&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;FEATURES&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;设备巡检指标集&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;UPDATETIME&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;timestamp&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;CURRENT_TIMESTAMP&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;CURRENT_TIMESTAMP&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;更新时间&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&quot;ID&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Java" scheme="http://cloudnoter.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://cloudnoter.com/tags/Java/"/>
    
      <category term="MySQL" scheme="http://cloudnoter.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Composer学习笔记</title>
    <link href="http://cloudnoter.com/2016/09/01/Composer%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://cloudnoter.com/2016/09/01/Composer学习笔记/</id>
    <published>2016-09-01T00:01:12.000Z</published>
    <updated>2017-04-29T06:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>#Composer学习笔记</p>
<h2 id="一、安装-MacOS"><a href="#一、安装-MacOS" class="headerlink" title="一、安装(MacOS)"></a>一、安装(MacOS)</h2><blockquote>
<p>系统要求：PHP5.3.2+以上版本<br>学习参考：<a href="https://getcomposer.org/doc/" target="_blank" rel="external">Composer官方文档</a></p>
</blockquote>
<p>Composer安装分两种：</p>
<h3 id="1-局部安装"><a href="#1-局部安装" class="headerlink" title="1.局部安装"></a>1.局部安装</h3><p>将<code>composer.phar</code>文件内嵌于PHP应用目录下，命令如下：</p>
<figure class="highlight scilab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">php -r <span class="string">"copy('</span>https:<span class="comment">//getcomposer.org/installer', 'composer-setup.php');"</span></div><div class="line">php -r <span class="string">"if (hash_file('</span>SHA384', <span class="string">'composer-setup.php'</span>) === <span class="string">'e115a8dc7871f15d853148a7fbac7da27d6c0030b848d9b3dc09e2a0388afed865e6a3d6b3c0fad45c48e2b5fc1196ae'</span>) &#123; echo <span class="string">'Installer verified'</span>; &#125; <span class="keyword">else</span> &#123; echo <span class="string">'Installer corrupt'</span>; unlink(<span class="string">'composer-setup.php'</span>); &#125; echo PHP_EOL;<span class="string">"</span></div><div class="line">php composer-setup.php</div><div class="line">php -r "unlink(<span class="string">'composer-setup.php'</span>);<span class="string">"</span></div></pre></td></tr></table></figure>
<blockquote>
<p>以上命令分别做如下几件事件：</p>
<ul>
<li>下载安装器</li>
<li>校验</li>
<li>执行安装</li>
<li>删除安装器</li>
</ul>
</blockquote>
<p>安装完成后，会在当前工作目录下生成可执行文件：<code>composer.phar</code>，你可以通过如下方式使用（运行）composer来进行项目的依赖管理：</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">php composer.phar &lt;<span class="keyword">command</span>&gt;</div><div class="line"><span class="comment"># command指install等composer命令</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="2-全局安装"><a href="#2-全局安装" class="headerlink" title="2.全局安装"></a>2.全局安装</h3><p>将可执行二进制文件放在系统PATH路径下，命令如下：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> 假设局部安装中生成的composer.phar文件在当前目录下</span></div><div class="line"><span class="meta">#</span><span class="bash"> /usr/<span class="built_in">local</span>/bin/目录是一个现成的PATH目录，</span></div><div class="line"><span class="meta">#</span><span class="bash"> 你也可以将可执行文件放置于其他PATH目录下</span></div><div class="line">mv composer.phar /usr/local/bin/composer</div></pre></td></tr></table></figure>
<p>通过这种方式，你就可以直接按如下方式来使用composer：</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">composer &lt;<span class="keyword">command</span>&gt;</div><div class="line"><span class="comment"># command指install等composer命令</span></div></pre></td></tr></table></figure>
<h2 id="二、基本概念"><a href="#二、基本概念" class="headerlink" title="二、基本概念"></a>二、基本概念</h2><h3 id="1-composer-json文件"><a href="#1-composer-json文件" class="headerlink" title="1. composer.json文件"></a>1. composer.json文件</h3><p>每个基于Composer的项目都需要包含<code>composer.json</code>文件，该文件用于声明项目所依赖的第三方库，其为JSON文件，格式类似：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">       	<span class="attr">"require"</span>: &#123;</div><div class="line">       		<span class="attr">"monolog/monolog"</span>: <span class="string">"1.2.*"</span></div><div class="line">       	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>require属性是用于声明依赖信息的地方。</p>
</blockquote>
<p>当运行<code>composer install</code>安装依赖时，Composer会将依赖库下载到项目根目录的<code>vendor</code>目录下。如monolog依赖安装后，其存放在<code>vendor\monolog\monolog</code>目录下。</p>
<h3 id="2-composer-lock文件"><a href="#2-composer-lock文件" class="headerlink" title="2. composer.lock文件"></a>2. composer.lock文件</h3><p>当执行如下命令安装依赖后，Composer将会在项目目录下创建<code>composer.lock</code>文件。</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">composer <span class="keyword">install</span></div></pre></td></tr></table></figure>
<blockquote>
<p>Composer将把安装时确切的版本号列表写入<code>composer.lock</code>文件。这将锁定改项目的特定版本。<br>后续再次运行<code>composer install</code>时，Composer将先检查目录下是否有<code>composer.lock</code>，若有则直接忽略<code>composer.json</code>，而使用<code>composer.lock</code>中的确切的版本信息。团队成员可以共享该lock文件以解决版本不一致问题。<br>当依赖版本有升级时，若想更新依赖至最新版本可以运行如下命令</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> 全部更新</span></div><div class="line">composer update</div><div class="line"><span class="meta">#</span><span class="bash"> 只更新某个依赖库</span></div><div class="line">composer update monolog/monolog [...]</div></pre></td></tr></table></figure>
<h3 id="3-自动加载"><a href="#3-自动加载" class="headerlink" title="3. 自动加载"></a>3. 自动加载</h3><p>对于库的自动加载信息，Composer 生成了一个<code>vendor/autoload.php</code>文件。通过引入这个文件，就实现了自动加载功能。</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">require</span> <span class="string">'vendor/autoload.php'</span>;</div></pre></td></tr></table></figure>
<p>通过自动加载功能我们可以很容易的使用第三方代码。例如：项目依赖monolog，我们就可以像这样开始使用这个类库，并且他们将被自动加载。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"><span class="built_in">log</span> = new Monolog\Logger(<span class="string">'name'</span>);</span></div><div class="line"><span class="meta">$</span><span class="bash"><span class="built_in">log</span>-&gt;pushHandler(new Monolog\Handler\StreamHandler(<span class="string">'app.log'</span>, Monolog\Logger::WARNING));</span></div><div class="line"><span class="meta"></span></div><div class="line">$<span class="bash"><span class="built_in">log</span>-&gt;addWarning(<span class="string">'Foo'</span>);</span></div></pre></td></tr></table></figure>
<p>当然，我们也可以在<code>composer.json</code>的<code>autoload</code>字段中增加自己的<code>autoloader</code>。</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"autoload"</span>: &#123;</div><div class="line">        <span class="attr">"psr-4"</span>: &#123;<span class="attr">"Acme\\"</span>: <span class="string">"src/"</span>&#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Composer将注册一个<code>PSR-4 autoloader</code>到<code>Acme</code>命名空间。</p>
<p>你可以定义一个从命名空间到目录的映射。此时src会在你项目的根目录，与<code>vendor</code>文件夹同级。例如<code>src/Foo.php</code>文件应该包含<code>Acme\Foo</code>类。</p>
<p>添加<code>autoload</code>字段后，你应该再次运行<code>install</code>命令来生成 <code>vendor/autoload.php</code>文件。</p>
<p>引用这个文件也将返回<code>autoloader</code>的实例，你可以将包含调用的返回值存储在变量中，并添加更多的命名空间。这对于在一个测试套件中自动加载类文件是非常有用的，例如：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$loader = <span class="keyword">require</span> <span class="string">'vendor/autoload.php'</span>;</div><div class="line">$loader-&gt;add(<span class="string">'Acme\\Test\\'</span>, <span class="keyword">__DIR__</span>);</div></pre></td></tr></table></figure>
<h2 id="三、库"><a href="#三、库" class="headerlink" title="三、库"></a>三、库</h2><p>不重复造轮子，这是大伙天天喊的，因为社区已经为大伙提供了很多可直接引用的轮子，这些轮子的学名就叫“库”。如果你觉得自己的项目可以帮到别人，你可以选择将其打包成库，并大告天下。你只要按如下步骤操作就行：</p>
<ol>
<li>为项目的composer.json添加name属性 [必需]</li>
<li>发布至git等版本管理系统或<a href="https://packagist.org/" target="_blank" rel="external">packagist</a></li>
</ol>
<blockquote>
<ul>
<li>composer.json中还有一个<code>version</code>属性，但一般不建议设置，因为composer会根据tag标签自行推算版本号，如果项目代码为master，则版本会被推算为<code>dev-master</code></li>
<li>packagist可理解为一个公共的组件仓库，类似maven中央库</li>
<li>对于未发布至packagist库的组件，引用方需要指定<code>repositories</code></li>
</ul>
</blockquote>
<p>比如，假如我们将项目发布至<a href="https://github.com/monkeychen/simiam" target="_blank" rel="external">Github</a>下，项目的<code>composer.json</code>如下：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"name"</span>: <span class="string">"simiam/composer-demo"</span>,</div><div class="line">    <span class="attr">"require"</span>: &#123;</div><div class="line">        <span class="attr">"monolog/monolog"</span>: <span class="string">"1.0.*"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>接下来，我们的另一个项目blog需要引用上面发布的<code>simiam/composer-demo</code>组件，则blog项目的<code>composer.json</code>内容如下：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"name"</span>: <span class="string">"simiam/blog"</span>,</div><div class="line">    <span class="attr">"repositories"</span>: [</div><div class="line">        &#123;</div><div class="line">            <span class="attr">"type"</span>: <span class="string">"vcs"</span>,</div><div class="line">            <span class="attr">"url"</span>: <span class="string">"https://github.com/monkeychen/simiam"</span></div><div class="line">        &#125;</div><div class="line">    ],</div><div class="line">    <span class="attr">"require"</span>: &#123;</div><div class="line">        <span class="attr">"simiam/composer-demo"</span>: <span class="string">"dev-master"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>因为我们发布的是master分支，所以<code>require</code>中依赖的版本号为<code>dev-master</code><br>如果组件已经发布至packagist的话，则不需要声明<code>repositories</code>，因为composer默认会从中央库中搜索。</p>
</blockquote>
<p>更详细的信息，可以参考<a href="https://getcomposer.org/doc/02-libraries.md" target="_blank" rel="external">这里</a>。</p>
<blockquote>
<p>转载请注明出处：<a href="http://cloudnoter.com">cloudnoter.com</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#Composer学习笔记&lt;/p&gt;
&lt;h2 id=&quot;一、安装-MacOS&quot;&gt;&lt;a href=&quot;#一、安装-MacOS&quot; class=&quot;headerlink&quot; title=&quot;一、安装(MacOS)&quot;&gt;&lt;/a&gt;一、安装(MacOS)&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;系统要求：PHP5.3.2+以上版本&lt;br&gt;学习参考：&lt;a href=&quot;https://getcomposer.org/doc/&quot;&gt;Composer官方文档&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Composer安装分两种：&lt;/p&gt;
&lt;h3 id=&quot;1-局部安装&quot;&gt;&lt;a href=&quot;#1-局部安装&quot; class=&quot;headerlink&quot; title=&quot;1.局部安装&quot;&gt;&lt;/a&gt;1.局部安装&lt;/h3&gt;&lt;p&gt;将&lt;code&gt;composer.phar&lt;/code&gt;文件内嵌于PHP应用目录下，命令如下：&lt;/p&gt;
&lt;figure class=&quot;highlight scilab&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;php -r &lt;span class=&quot;string&quot;&gt;&quot;copy(&#39;&lt;/span&gt;https:&lt;span class=&quot;comment&quot;&gt;//getcomposer.org/installer&#39;, &#39;composer-setup.php&#39;);&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;php -r &lt;span class=&quot;string&quot;&gt;&quot;if (hash_file(&#39;&lt;/span&gt;SHA384&#39;, &lt;span class=&quot;string&quot;&gt;&#39;composer-setup.php&#39;&lt;/span&gt;) === &lt;span class=&quot;string&quot;&gt;&#39;e115a8dc7871f15d853148a7fbac7da27d6c0030b848d9b3dc09e2a0388afed865e6a3d6b3c0fad45c48e2b5fc1196ae&#39;&lt;/span&gt;) &amp;#123; echo &lt;span class=&quot;string&quot;&gt;&#39;Installer verified&#39;&lt;/span&gt;; &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123; echo &lt;span class=&quot;string&quot;&gt;&#39;Installer corrupt&#39;&lt;/span&gt;; unlink(&lt;span class=&quot;string&quot;&gt;&#39;composer-setup.php&#39;&lt;/span&gt;); &amp;#125; echo PHP_EOL;&lt;span class=&quot;string&quot;&gt;&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;php composer-setup.php&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;php -r &quot;&lt;/span&gt;unlink(&lt;span class=&quot;string&quot;&gt;&#39;composer-setup.php&#39;&lt;/span&gt;);&lt;span class=&quot;string&quot;&gt;&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;以上命令分别做如下几件事件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;下载安装器&lt;/li&gt;
&lt;li&gt;校验&lt;/li&gt;
&lt;li&gt;执行安装&lt;/li&gt;
&lt;li&gt;删除安装器&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;安装完成后，会在当前工作目录下生成可执行文件：&lt;code&gt;composer.phar&lt;/code&gt;，你可以通过如下方式使用（运行）composer来进行项目的依赖管理：&lt;/p&gt;
&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;php composer.phar &amp;lt;&lt;span class=&quot;keyword&quot;&gt;command&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# command指install等composer命令&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Composer" scheme="http://cloudnoter.com/categories/Composer/"/>
    
    
      <category term="Composer" scheme="http://cloudnoter.com/tags/Composer/"/>
    
  </entry>
  
  <entry>
    <title>MAC下搭建Apache+PHP开发环境</title>
    <link href="http://cloudnoter.com/2016/07/02/MAC%E4%B8%8B%E6%90%AD%E5%BB%BAApache+PHP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://cloudnoter.com/2016/07/02/MAC下搭建Apache+PHP开发环境/</id>
    <published>2016-07-01T23:18:57.000Z</published>
    <updated>2017-04-29T06:08:34.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>apache配置文件为：<code>/etc/apache2/httpd.conf</code></li>
<li>OSX下默认集成了apache与php；</li>
<li>Mac Apache 有2个默认的网站目录，一个是<code>/Library/WebServer/Documents/</code>，一个是用户目录下的Sites目录（推荐使用），默认未开启；</li>
<li>Apache 基本命令：</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">启动<span class="selector-pseudo">:sudo</span> <span class="selector-tag">apachectl</span> <span class="selector-tag">start</span></div><div class="line">停止<span class="selector-pseudo">:sudo</span> <span class="selector-tag">apachectl</span> <span class="selector-tag">stop</span></div><div class="line">重启<span class="selector-pseudo">:sudo</span> <span class="selector-tag">apachectl</span> <span class="selector-tag">restart</span></div></pre></td></tr></table></figure>
<h2 id="1-配置apache"><a href="#1-配置apache" class="headerlink" title="1. 配置apache"></a>1. 配置apache</h2><p>Step 1. 在用户目录下用Finder创建 Sites 文件夹；</p>
<p>Step 2. 在<code>/etc/apache2/users/</code>目录下添加 <code>username.conf</code>文件(username要替换成真正的用户名，下同)：</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">cd</span> /etc/apache2/users  </div><div class="line">sudo <span class="keyword">vim</span> username.<span class="keyword">conf</span></div></pre></td></tr></table></figure>
<p>Step 3. 在<code>username.conf</code>文件中添加如下内容：<br>    <img src="/img/username_conf.png" alt="username.conf内容"></p>
<a id="more"></a>
<p>Step 4. 检查<code>username.conf</code>文件的权限是否正确，正确的应该为：</p>
<figure class="highlight tap"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-rw-r--r-- <span class="number"> 1 </span>root  wheel <span class="number"> 126 </span>Mar<span class="number"> 23 </span>23:02 username.conf</div></pre></td></tr></table></figure>
<p>如果不是，则需要修改权限，使用如下命令：  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">sudo</span> <span class="selector-tag">chmod</span> 644 <span class="selector-tag">username</span><span class="selector-class">.conf</span></div></pre></td></tr></table></figure>
<p>Step 5. 修改<code>httpd.conf</code>文件配置：</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo <span class="keyword">vim</span> /etc/apache2/httpd.<span class="keyword">conf</span></div></pre></td></tr></table></figure>
<p>在<code>httpd.conf</code>找到如下3行，并确保这3行的注释＃是被删除的  </p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">LoadModule authz_core_module libexec/apache2/mod_authz_core<span class="selector-class">.so</span></div><div class="line">LoadModule authz_host_module libexec/apache2/mod_authz_host<span class="selector-class">.so</span></div><div class="line">LoadModule userdir_module libexec/apache2/mod_userdir.so</div></pre></td></tr></table></figure>
<p>接着启用用户目录配置，同为删除对应行的＃</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">Include</span> <span class="regexp">/private/</span>etc<span class="regexp">/apache2/</span>extra<span class="regexp">/httpd-userdir.conf</span></div></pre></td></tr></table></figure>
<p>Step 6. 修改<code>httpd-userdir.conf</code>文件配置  </p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim <span class="regexp">/etc/</span>apache2<span class="regexp">/extra/</span>httpd-userdir.conf</div></pre></td></tr></table></figure>
<p>取消如下行的＃</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">Include</span> <span class="regexp">/private/</span>etc<span class="regexp">/apache2/u</span>sers<span class="comment">/*.conf</span></div></pre></td></tr></table></figure>
<p>Step 7. 重启Apache，并检查配置是否生效</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">sudo apachectl restart</span></div></pre></td></tr></table></figure>
<p>在浏览器输入：<code>http://localhost/~username/</code>，看是否配置成功</p>
<p>Step 8. 让apache支持php脚本  </p>
<ul>
<li>修改 httpd.conf 文件配置</li>
</ul>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo <span class="keyword">vim</span> /etc/apache2/httpd.<span class="keyword">conf</span></div></pre></td></tr></table></figure>
<ul>
<li>取消php库文件的＃注释</li>
</ul>
<figure class="highlight smali"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">LoadModule php5_module libexec/apache2/libphp5.so</div></pre></td></tr></table></figure>
<ul>
<li>重启Apache</li>
</ul>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">sudo apachectl restart</span></div></pre></td></tr></table></figure>
<ul>
<li>在Sites目录下创建index.php，内容如下：</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?php</span> phpinfo(); <span class="meta">?&gt;</span></span></div></pre></td></tr></table></figure>
<ul>
<li>在浏览器里输入：<code>http://localhost/~username</code>   </li>
</ul>
<blockquote>
<p>如果能显示php环境信息，则说明php环境搭建成功  </p>
</blockquote>
<p>Step 9. 配置虚拟主机(vhost)</p>
<ul>
<li>将/etc/apache2/httpd.conf文件中如下内容的<code>#</code>去掉</li>
</ul>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">Include</span> /private/etc/apache2/extra/httpd-vhosts.conf</span></div></pre></td></tr></table></figure>
<ul>
<li>修改/etc/apache2/extra/httpd-vhosts.conf:</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">&lt;VirtualHost *:<span class="number">80</span>&gt;</div><div class="line">    ServerAdmin admin@simiam<span class="selector-class">.vhost</span><span class="selector-class">.com</span></div><div class="line">    DocumentRoot <span class="string">"/Users/chenzhian/workspace/php/website/public"</span></div><div class="line">    ServerName simiam<span class="selector-class">.vhost</span><span class="selector-class">.com</span></div><div class="line">    DirectoryIndex main<span class="selector-class">.php</span> index<span class="selector-class">.php</span> index<span class="selector-class">.html</span></div><div class="line">    &lt;Directory <span class="string">"/Users/chenzhian/workspace/php/website/public"</span>&gt;</div><div class="line">	Options FollowSymLinks Multiviews</div><div class="line">	MultiviewsMatch Any</div><div class="line">	AllowOverride All</div><div class="line">	Require all granted</div><div class="line">    &lt;/Directory&gt;</div><div class="line">    ErrorLog <span class="string">"/private/var/log/apache2/simiam.vhost.com-error_log"</span></div><div class="line">    CustomLog <span class="string">"/private/var/log/apache2/simiam.vhost.com-access_log"</span> common</div><div class="line">&lt;/VirtualHost&gt;</div><div class="line"></div><div class="line">&lt;VirtualHost *:<span class="number">80</span>&gt;</div><div class="line">    ServerAdmin admin@<span class="number">100</span><span class="selector-class">.vhost</span><span class="selector-class">.com</span></div><div class="line">    DocumentRoot <span class="string">"/Users/chenzhian/workspace/php/website/100"</span></div><div class="line">    ServerName <span class="number">100</span><span class="selector-class">.vhost</span><span class="selector-class">.com</span></div><div class="line">    DirectoryIndex index<span class="selector-class">.php</span> index<span class="selector-class">.html</span></div><div class="line">        &lt;Directory <span class="string">"/Users/chenzhian/workspace/php/website/100"</span>&gt;</div><div class="line">	        Options FollowSymLinks Multiviews</div><div class="line">		MultiviewsMatch Any</div><div class="line">		AllowOverride All</div><div class="line">		Require all granted</div><div class="line">	&lt;/Directory&gt;</div><div class="line">    ErrorLog <span class="string">"/private/var/log/apache2/100.vhost.com-error_log"</span></div><div class="line">    CustomLog <span class="string">"/private/var/log/apache2/100.vhost.com-access_log"</span> common</div><div class="line">&lt;/VirtualHost&gt;</div></pre></td></tr></table></figure>
<h2 id="2-修改或创建php-ini"><a href="#2-修改或创建php-ini" class="headerlink" title="2. 修改或创建php.ini"></a>2. 修改或创建php.ini</h2><p>Step 1. 为了开启php的一些扩展功能，有必要对<code>php.ini</code>进行修改。OSX默认提供的php是没有<code>php.ini</code>文件的，因此我们需要自己创建一个。可以在<code>/etc/</code>目录下创建<code>php.ini</code></p>
<ul>
<li>/etc/目录下有提供php.ini.default模板</li>
</ul>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo cp <span class="regexp">/etc/</span>php.ini.<span class="keyword">default</span> <span class="regexp">/etc/</span>php.ini</div></pre></td></tr></table></figure>
<ul>
<li><p>如果不知道php默认是到哪里找php.ini文件的话，则使用命令<code>php --ini</code>：</p>
</li>
<li><p>命令输出如下类似信息：  </p>
</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Configuration File (php.ini) Path: /etc</div><div class="line">Loaded Configuration File:         /etc/php<span class="selector-class">.ini</span></div><div class="line">Scan <span class="keyword">for</span> additional <span class="selector-class">.ini</span> files <span class="keyword">in</span>: /Library/Server/Web/Config/php</div><div class="line">Additional <span class="selector-class">.ini</span> files parsed:      (<span class="attribute">none</span>)</div></pre></td></tr></table></figure>
<p>Step 2. 在<code>php.ini</code>文件最后添加如下内容以启用xdebug扩展:</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[xdebug]</div><div class="line"></div><div class="line">zend_extension=/usr/lib/php/extensions/no-debug-non-zts<span class="number">-20121212</span>/xdebug.so</div><div class="line">xdebug.remote_autostart=on</div><div class="line">xdebug.remote_enable=on</div><div class="line">xdebug.remote_enable=<span class="number">1</span></div><div class="line">xdebug.remote_mode=<span class="string">"req"</span></div><div class="line">xdebug.remote_log=<span class="string">"/var/log/xdebug.log"</span></div><div class="line">xdebug.remote_host=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></div><div class="line">xdebug.remote_port=<span class="number">9000</span></div><div class="line">xdebug.remote_handler=<span class="string">"dbgp"</span></div><div class="line">xdebug.idekey=<span class="string">"PhpStorm"</span></div></pre></td></tr></table></figure>
<blockquote>
<p>xdebug.remote_host的值建议设置为127.0.0.1，而不要设置为localhost（当开启调试模式时，可能会出现域名解析很慢的问题）</p>
</blockquote>
<h2 id="3-安装并配置PhpStorm"><a href="#3-安装并配置PhpStorm" class="headerlink" title="3. 安装并配置PhpStorm"></a>3. 安装并配置PhpStorm</h2><p>Step 1. 配置php解释器:直接在<strong><code>Preferences</code></strong>的<strong><code>Languages-&gt;PHP</code></strong>页面添加php命令路径:</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="regexp">/usr/</span>bin<span class="regexp">/php</span></div></pre></td></tr></table></figure>
<p>Step 2. 配置debug<br>    在<strong><code>PHP-&gt;Debug-&gt;DBGp</code></strong>中添加如下信息:</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">IDE</span> <span class="selector-tag">key</span><span class="selector-pseudo">:PhpStorm</span> (与php.ini中xdebug配置项xdebug.idekey一致)  </div><div class="line"><span class="selector-tag">Host</span><span class="selector-pseudo">:localhost</span>  (apache服务地址)  </div><div class="line"><span class="selector-tag">Port</span><span class="selector-pseudo">:80</span> (apache服务端口)</div></pre></td></tr></table></figure>
<blockquote>
<p>转载请注明出处：<a href="http://cloudnoter.com">cloudnoter.com</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;apache配置文件为：&lt;code&gt;/etc/apache2/httpd.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;OSX下默认集成了apache与php；&lt;/li&gt;
&lt;li&gt;Mac Apache 有2个默认的网站目录，一个是&lt;code&gt;/Library/WebServer/Documents/&lt;/code&gt;，一个是用户目录下的Sites目录（推荐使用），默认未开启；&lt;/li&gt;
&lt;li&gt;Apache 基本命令：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;启动&lt;span class=&quot;selector-pseudo&quot;&gt;:sudo&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;apachectl&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;start&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;停止&lt;span class=&quot;selector-pseudo&quot;&gt;:sudo&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;apachectl&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;stop&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;重启&lt;span class=&quot;selector-pseudo&quot;&gt;:sudo&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;apachectl&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;restart&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;1-配置apache&quot;&gt;&lt;a href=&quot;#1-配置apache&quot; class=&quot;headerlink&quot; title=&quot;1. 配置apache&quot;&gt;&lt;/a&gt;1. 配置apache&lt;/h2&gt;&lt;p&gt;Step 1. 在用户目录下用Finder创建 Sites 文件夹；&lt;/p&gt;
&lt;p&gt;Step 2. 在&lt;code&gt;/etc/apache2/users/&lt;/code&gt;目录下添加 &lt;code&gt;username.conf&lt;/code&gt;文件(username要替换成真正的用户名，下同)：&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; /etc/apache2/users  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo &lt;span class=&quot;keyword&quot;&gt;vim&lt;/span&gt; username.&lt;span class=&quot;keyword&quot;&gt;conf&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Step 3. 在&lt;code&gt;username.conf&lt;/code&gt;文件中添加如下内容：&lt;br&gt;    &lt;img src=&quot;/img/username_conf.png&quot; alt=&quot;username.conf内容&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Php" scheme="http://cloudnoter.com/categories/Php/"/>
    
    
      <category term="php" scheme="http://cloudnoter.com/tags/php/"/>
    
      <category term="apache2" scheme="http://cloudnoter.com/tags/apache2/"/>
    
  </entry>
  
  <entry>
    <title>JNI引起的堆外内存泄漏问题分析</title>
    <link href="http://cloudnoter.com/2016/02/27/JNI%E5%BC%95%E8%B5%B7%E7%9A%84%E5%A0%86%E5%A4%96%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/"/>
    <id>http://cloudnoter.com/2016/02/27/JNI引起的堆外内存泄漏问题分析/</id>
    <published>2016-02-26T21:18:48.000Z</published>
    <updated>2017-04-29T06:07:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>客户现场的监控系统中有一个网络听诊器功能，其每隔1分钟会对全网设备进行ping操作，以此来尽可能快的发现设备及网络是否出现异常。暂且不说通过该功能来对设备及网络作健康检测是否靠谱。由于JAVA对于网络层以下的协议是无能为力的，而ping操作涉及ICMP与ARP协议，因此监控系统只能借助JNI机制来搞定。</p>
<h1 id="BUG现象"><a href="#BUG现象" class="headerlink" title="BUG现象"></a>BUG现象</h1><p>监控系统的java.exe进程每隔几个小时就异常退出</p>
<h1 id="问题定位"><a href="#问题定位" class="headerlink" title="问题定位"></a>问题定位</h1><ol>
<li>通过应用系统的日志看是否为业务相关的异常引起的 –》日志中并无任何异常信息</li>
<li>打开GC日志，并观察一段时间，看是否存在堆内存回收异常（泄漏或溢出） –》堆内存一切正常</li>
<li>此时忽然想起，java.exe进程异常退出应该会生成相关的hs_err<pid>.log文件，果然在应用目录下找到了一堆错误文件。该日志也叫crash日志。 </pid></li>
<li>通过查看hs_err<pid>.log内容得知，原来是jni ping引入的dll调用异常导致java.exe进程异常中止了。<blockquote>
<p>PS：如果能早点想起步骤3，那就不用浪费步骤2的功夫了。</p>
</blockquote>
</pid></li>
</ol>
<a id="more"></a>
<h1 id="JNI调用异常分析"><a href="#JNI调用异常分析" class="headerlink" title="JNI调用异常分析"></a>JNI调用异常分析</h1><p>JNI异常导致java进程中止的原因可能为</p>
<ul>
<li>JVM自己的BUG：谷歌了一把，网上描述的BUG中，现场的JDK版本都已经修复了。</li>
<li>JNI DLL的BUG：这个原因范围就大了，至此只能根据经验猜测可能的原因，然后一个一个排除了。</li>
</ul>
<p>由于linux环境下有这么一个机制：当内核检测到进程的物理内存不断增加至某一个值时，内核会直接将该进程kill掉。</p>
<blockquote>
<p>windows是否也有这样的机制呢？目前尚未查证，还请高手解答。</p>
</blockquote>
<p>在没有进一步证据的前提下，只能先猜测是否为进程物理内存出了问题，于是监测了下应用进程的物理内存损耗量，果然是缓慢递增的，但JVM堆内存仍然一切正常，由此大约知道是堆外内存使用上出了问题。</p>
<p>关于堆外内存的相关知识，可参考下面的文章：</p>
<ul>
<li><a href="http://lovestblog.cn/blog/2015/08/21/rssxmx/" target="_blank" rel="external">进程物理内存远大于Xmx的问题分析</a></li>
<li><a href="http://lovestblog.cn/blog/2015/05/12/direct-buffer/" target="_blank" rel="external">JVM源码分析之堆外内存完全解读</a></li>
</ul>
<blockquote>
<p>至此，可以知道该问题与JAVA没啥关系了，但为了彻底搞明白，我还是硬着头皮找来DLL的C源码，想看看是否可以用我helloworld级别的C水平把这个问题搞定。</p>
</blockquote>
<h1 id="堆外内存-泄漏、异常-分析"><a href="#堆外内存-泄漏、异常-分析" class="headerlink" title="堆外内存[泄漏、异常]分析"></a>堆外内存[泄漏、异常]分析</h1><p>分析C/C++应用的内存，大伙一般都会想到perftool，可惜windows环境下我始终编译不过。于是谷歌上再搜索一把”windows内存泄漏”，发现知乎上有<a href="https://www.zhihu.com/question/19647750" target="_blank" rel="external">文章</a>推荐了一堆，但我要么下载不到，要么看不懂。最后是根据《<a href="http://www.cnblogs.com/skynet/archive/2011/02/20/1959162.html" target="_blank" rel="external">C/C++内存泄漏及检测</a>》介绍的方法定位到是dll中有一段代码使用了缓存导致内存泄漏，当内存达到JVM中设置的MaxDirectMemorySize值时，dll就会出现内存访问异常错误，最终导致java.exe进程异常退出了。</p>
<blockquote>
<p>PS：在定位堆外内存异常相关问题时，为了快速重现问题，可以将MaxDirectMemorySize改小，MaxDirectMemorySize的默认值可认为与-Xmx设置的值一样（严格上不是，参见<a href="http://lovestblog.cn/blog/2015/05/12/direct-buffer/" target="_blank" rel="external">JVM源码分析之堆外内存完全解读</a>）</p>
</blockquote>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>该问题并非通用性问题，写这篇文章主要是为了记录下当时解决该问题的整个定位过程，文中一些知识点可能表述有误，还请批评指正。</p>
<blockquote>
<p>转载请注明出处：<a href="http://cloudnoter.com">cloudnoter.com</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;客户现场的监控系统中有一个网络听诊器功能，其每隔1分钟会对全网设备进行ping操作，以此来尽可能快的发现设备及网络是否出现异常。暂且不说通过该功能来对设备及网络作健康检测是否靠谱。由于JAVA对于网络层以下的协议是无能为力的，而ping操作涉及ICMP与ARP协议，因此监控系统只能借助JNI机制来搞定。&lt;/p&gt;
&lt;h1 id=&quot;BUG现象&quot;&gt;&lt;a href=&quot;#BUG现象&quot; class=&quot;headerlink&quot; title=&quot;BUG现象&quot;&gt;&lt;/a&gt;BUG现象&lt;/h1&gt;&lt;p&gt;监控系统的java.exe进程每隔几个小时就异常退出&lt;/p&gt;
&lt;h1 id=&quot;问题定位&quot;&gt;&lt;a href=&quot;#问题定位&quot; class=&quot;headerlink&quot; title=&quot;问题定位&quot;&gt;&lt;/a&gt;问题定位&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;通过应用系统的日志看是否为业务相关的异常引起的 –》日志中并无任何异常信息&lt;/li&gt;
&lt;li&gt;打开GC日志，并观察一段时间，看是否存在堆内存回收异常（泄漏或溢出） –》堆内存一切正常&lt;/li&gt;
&lt;li&gt;此时忽然想起，java.exe进程异常退出应该会生成相关的hs_err&lt;pid&gt;.log文件，果然在应用目录下找到了一堆错误文件。该日志也叫crash日志。 &lt;/li&gt;
&lt;li&gt;通过查看hs_err&lt;pid&gt;.log内容得知，原来是jni ping引入的dll调用异常导致java.exe进程异常中止了。&lt;blockquote&gt;
&lt;p&gt;PS：如果能早点想起步骤3，那就不用浪费步骤2的功夫了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Java" scheme="http://cloudnoter.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://cloudnoter.com/tags/Java/"/>
    
      <category term="JNI" scheme="http://cloudnoter.com/tags/JNI/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 5.2中文文档：HTTP路由</title>
    <link href="http://cloudnoter.com/2016/01/21/Laravel-5-2%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3%EF%BC%9AHTTP%E8%B7%AF%E7%94%B1/"/>
    <id>http://cloudnoter.com/2016/01/21/Laravel-5-2中文文档：HTTP路由/</id>
    <published>2016-01-20T21:31:08.000Z</published>
    <updated>2017-05-07T13:38:03.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本路由"><a href="#基本路由" class="headerlink" title="基本路由"></a>基本路由</h1><p>所有的Laravel路由规则都定义在<code>app/Http/routes.php</code>文件中，Laravel框架在初始化时将自动加载该文件。Laravel中最基本的路由规则如下：</p>
<pre><code>Route::get(&apos;foo&apos;, function () {
    return &apos;Hello World&apos;;
});
</code></pre><p>其接受两个参数：匹配该路由的URI、路由处理闭包<code>Closure</code>；该闭包定义了具体的路由规则。</p>
<p><strong>默认路由文件</strong></p>
<p>默认情况下，<code>routes.php</code>中可以定义简单的路由，或者将这些路由定义在路由组中。路由组将利用<code>web</code>中间件为定义在其中的路由规则提供’会话状态’与<code>CSRF</code>保存等功能。<br><a id="more"></a></p>
<p>任何未放在路由组中的路由规则将无权访问会话，也无法享受web中间件提供的<code>CSRF</code>保护等特性，因此如果您定义的路由规则需要web中间件提供的这些特性时，你需要确保将这些路由规则放入路由组中；通过情况下，我们会将大部分的路由规则都放在路由组中。</p>
<pre><code>Route::group([&apos;middleware&apos; =&gt; [&apos;web&apos;]], function () {
    //
});
</code></pre><p><strong>Route类中可用的路由方法</strong></p>
<p>框架路由引擎允许你注册如下的路由规则来响应相应的HTTP请求动作：</p>
<pre><code>Route::get($uri, $callback);
Route::post($uri, $callback);
Route::put($uri, $callback);
Route::patch($uri, $callback);
Route::delete($uri, $callback);
Route::options($uri, $callback);
</code></pre><p>有时你需要注册一个路由规则来响应多个HTTP请求动作，因此你可以使用<code>Route</code>类的<code>match</code>方法来满足该需求。甚至你可以使用<code>Route</code>类的<code>any</code>方法来响应所有的HTTP请求动作。</p>
<pre><code>Route::match([&apos;get&apos;, &apos;post&apos;], &apos;/&apos;, function () {
    //
});

Route::any(&apos;foo&apos;, function () {
    //
});
</code></pre><h1 id="路由参数-占位符"><a href="#路由参数-占位符" class="headerlink" title="路由参数(占位符)"></a>路由参数(占位符)</h1><p>Laravel中路由规则配置中的URL中允许设置参数(占位符)，便于闭包或控制器方法提取与引用。Laravel的路由URL中参数占位符配置方式分两种：必选与可选。</p>
<blockquote>
<p>这种机制蛮适合开发符合RESTful规范的应用，这里有一篇由《黑客与画家》、《软件随想录》译者阮一峰写的介绍RESTful概念的文章： <a href="http://www.ruanyifeng.com/blog/2011/09/restful" target="_blank" rel="external">理解RESTful架构</a></p>
</blockquote>
<p><strong>必选参数占位符</strong></p>
<p>所谓必选，即HTTP请求的URL中参数占位符的部分必需有具体的数据，否则该路由规则不会被匹配到。比如，你可能需要从请求URL中获取用户的ID时，你就可以定义如下的路由规则：</p>
<pre><code>Route::get(&apos;user/{id}&apos;, function ($id) {
    return &apos;User &apos;.$id;
});
// 当请求URL为http://somesite/user/2时，2将被提取出来并赋值给闭包函数中的变量id
</code></pre><p>由上面的例子可知，路由参数占位符是由一对花括号来定义的。当然，我们也可以在URL中定义多个参数占位符，如下：</p>
<pre><code>Route::get(&apos;posts/{post}/comments/{comment}&apos;, function ($postId, $commentId) {
     //
});
</code></pre><blockquote>
<p>注意：路由参数占位符的定义需要符合PHP变量命名规范，如不能包含”-“符。</p>
</blockquote>
<p><strong>可选参数占位符</strong></p>
<p>如果想让路由参数占位符是可选的（有时请求URL中的占位符部分可能是空的），此时可以在占位符名称的后面加上一个问号”?”即可。</p>
<pre><code>Route::get(&apos;user/{name?}&apos;, function ($name = null) {
    return $name;
});

Route::get(&apos;user/{name?}&apos;, function ($name = &apos;John&apos;) {
    return $name;
});
</code></pre><blockquote>
<p>当URL参数占位符设置为可选时，后面的闭包函数的参数<strong>需要</strong>提供默认值。</p>
</blockquote>
<h1 id="命名路由"><a href="#命名路由" class="headerlink" title="命名路由"></a>命名路由</h1><p>命名路由将允许你方便的生成URL或重定向URL，这些生成的URL最终将匹配该路由规则。你可通过如下方式定义命名路由：</p>
<pre><code>Route::get(&apos;profile&apos;, [&apos;as&apos; =&gt; &apos;profile&apos;, function () {
    //
}]);
</code></pre><p>闭包函数的第二个数组参数的元素键值需要指定为”as”，元素值即为路由规则名。当然，你也可以为控制器的方法来代替上面的闭包函数，如下：</p>
<pre><code>Route::get(&apos;profile&apos;, [
    &apos;as&apos; =&gt; &apos;profile&apos;, &apos;uses&apos; =&gt; &apos;UserController@showProfile&apos;
]);
</code></pre><p>定义命名路由还有如下方式：</p>
<pre><code>Route::get(&apos;user/profile&apos;, &apos;UserController@showProfile&apos;)-&gt;name(&apos;profile&apos;);
</code></pre><p>即先定义一个普通路由，然后再调用该路由规则实例的name方法。</p>
<p><strong>路由组与命名路由</strong></p>
<p>如果你正在使用路由规则组时，你可以在路由规则组定义的属性数组中添加一个key为”as”，值为某字符串的元素，该元素的值将作为该路由组中包含的路由名字的前缀。如下：</p>
<pre><code>Route::group([&apos;as&apos; =&gt; &apos;admin::&apos;], function () {
    Route::get(&apos;dashboard&apos;, [&apos;as&apos; =&gt; &apos;dashboard&apos;, function () {
        // Route named &quot;admin::dashboard&quot;
    }]);
});
</code></pre><p><strong>生成匹配命名路由的URL</strong></p>
<p>一旦你已经为某一路由起了相应的名字，那么你就可以通过全局函数<code>route</code>来生成相应的URL：</p>
<pre><code>// Generating URLs...
$url = route(&apos;profile&apos;);

// Generating Redirects...
return redirect()-&gt;route(&apos;profile&apos;);
</code></pre><p>如果命名路由规则的URL部分包含参数占位符，则你可以将参数值作为<code>route</code>函数的第二个数组参数的元素传入，框架将自动用该参数值代替占位符以生成相应的URL。</p>
<pre><code>Route::get(&apos;user/{id}/profile&apos;, [&apos;as&apos; =&gt; &apos;profile&apos;, function ($id) {
    //
}]);

$url = route(&apos;profile&apos;, [&apos;id&apos; =&gt; 1]);
</code></pre><h1 id="路由组"><a href="#路由组" class="headerlink" title="路由组"></a>路由组</h1><blockquote>
<p>转载请注明出处：<a href="http://cloudnoter.com">cloudnoter.com</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基本路由&quot;&gt;&lt;a href=&quot;#基本路由&quot; class=&quot;headerlink&quot; title=&quot;基本路由&quot;&gt;&lt;/a&gt;基本路由&lt;/h1&gt;&lt;p&gt;所有的Laravel路由规则都定义在&lt;code&gt;app/Http/routes.php&lt;/code&gt;文件中，Laravel框架在初始化时将自动加载该文件。Laravel中最基本的路由规则如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Route::get(&amp;apos;foo&amp;apos;, function () {
    return &amp;apos;Hello World&amp;apos;;
});
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其接受两个参数：匹配该路由的URI、路由处理闭包&lt;code&gt;Closure&lt;/code&gt;；该闭包定义了具体的路由规则。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;默认路由文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;默认情况下，&lt;code&gt;routes.php&lt;/code&gt;中可以定义简单的路由，或者将这些路由定义在路由组中。路由组将利用&lt;code&gt;web&lt;/code&gt;中间件为定义在其中的路由规则提供’会话状态’与&lt;code&gt;CSRF&lt;/code&gt;保存等功能。&lt;br&gt;
    
    </summary>
    
      <category term="Translation" scheme="http://cloudnoter.com/categories/Translation/"/>
    
    
      <category term="php" scheme="http://cloudnoter.com/tags/php/"/>
    
      <category term="laravel" scheme="http://cloudnoter.com/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>Java调试工具:JDB</title>
    <link href="http://cloudnoter.com/2016/01/13/Java%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7-JDB/"/>
    <id>http://cloudnoter.com/2016/01/13/Java调试工具-JDB/</id>
    <published>2016-01-12T23:25:28.000Z</published>
    <updated>2017-04-29T06:07:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>代码调试是大家在日常应用开发定位BUG时会经常使用的技能。然而在客户生产环境下，一没有开发环境，二没有外网连接，如果此时应用出问题，而通过日志又无法定位时，该怎么办呢？</p>
<p>也许有人会按如下步骤来定位问题（假设BUG可复现且客户允许应用服务重启）：</p>
<ol>
<li>在本地可能出问题的相关代码中添加许多的日志信息，以将应用运行状态打印出来。</li>
<li>打包并部署至客户现场环境</li>
<li>复现BUG并查看日志信息并最终解决问题</li>
</ol>
<p>其实JDK中提供的JDB是一个更加理想现场调试工具，其包含的命令列表如下：</p>
<a id="more"></a>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line">** JDB命令列表 **</div><div class="line">connectors                <span class="comment">-- 列出此 VM 中可用的连接器和传输器</span></div><div class="line"></div><div class="line">run [类 [参数]]        <span class="comment">-- 开始执行应用程序的主类</span></div><div class="line"></div><div class="line">threads [线程组]     <span class="comment">-- 列出线程</span></div><div class="line">thread &lt;线程 ID&gt;        <span class="comment">-- 设置默认线程</span></div><div class="line">suspend [线程 ID]    <span class="comment">-- 暂停线程（默认值为 all）</span></div><div class="line">resume [线程 ID]     <span class="comment">-- 恢复线程（默认值为 all）</span></div><div class="line">where [&lt;线程 ID&gt; | all] <span class="comment">-- 转储线程的堆栈</span></div><div class="line">wherei [&lt;线程 ID&gt; | all] <span class="comment">-- 转储线程的堆栈以及 pc 信息</span></div><div class="line">up [n 帧]             <span class="comment">-- 向上移动线程的堆栈</span></div><div class="line">down [n 帧]           <span class="comment">-- 向下移动线程的堆栈</span></div><div class="line"><span class="built_in">kill</span> &lt;线程 ID&gt; &lt;表达式&gt;   <span class="comment">-- 中止具有给定的异常对象的线程</span></div><div class="line">interrupt &lt;线程 ID&gt;     <span class="comment">-- 中断线程</span></div><div class="line"></div><div class="line">print &lt;表达式&gt;              <span class="comment">-- 输出表达式的值</span></div><div class="line">dump &lt;表达式&gt;               <span class="comment">-- 输出所有对象信息</span></div><div class="line">eval &lt;表达式&gt;               <span class="comment">-- 计算表达式的值（与 print 作用相同）</span></div><div class="line"><span class="built_in">set</span> &lt;lvalue&gt; = &lt;表达式&gt;     <span class="comment">-- 为字段/变量/数组元素指定新值</span></div><div class="line">locals                    <span class="comment">-- 输出当前堆栈帧中的所有本地变量</span></div><div class="line"></div><div class="line">classes                   <span class="comment">-- 列出当前已知的类</span></div><div class="line">class &lt;类 ID&gt;          <span class="comment">-- 显示已命名类的详细信息</span></div><div class="line">methods &lt;类 ID&gt;        <span class="comment">-- 列出类的方法</span></div><div class="line">fields &lt;类 ID&gt;         <span class="comment">-- 列出类的字段</span></div><div class="line"></div><div class="line">threadgroups              <span class="comment">-- 列出线程组</span></div><div class="line">threadgroup &lt;名称&gt;        <span class="comment">-- 设置当前线程组</span></div><div class="line"></div><div class="line"><span class="built_in">stop</span> <span class="keyword">in</span> &lt;类 ID&gt;.&lt;方法&gt;[(参数类型,...)]</div><div class="line">                          <span class="comment">-- 在方法中设置断点</span></div><div class="line"><span class="built_in">stop</span> <span class="keyword">at</span> &lt;类 ID&gt;:&lt;行&gt; <span class="comment">-- 在行中设置断点</span></div><div class="line"><span class="built_in">clear</span> &lt;类 ID&gt;.&lt;方法&gt;[(参数类型,...)]</div><div class="line">                          <span class="comment">-- 清除方法中的断点</span></div><div class="line"><span class="built_in">clear</span> &lt;类 ID&gt;:&lt;行&gt;   <span class="comment">-- 清除行中的断点</span></div><div class="line"><span class="built_in">clear</span>                     <span class="comment">-- 列出断点</span></div><div class="line"><span class="keyword">catch</span> [uncaught|caught|all] &lt;类 ID&gt;|&lt;类模式&gt;</div><div class="line">                          <span class="comment">-- 出现指定的异常时中断</span></div><div class="line">ignore [uncaught|caught|all] &lt;类 ID&gt;|&lt;类模式&gt;</div><div class="line">                          <span class="comment">-- 对于指定的异常，取消 'catch'</span></div><div class="line">watch [access|all] &lt;类 ID&gt;.&lt;字段名&gt;</div><div class="line">                          <span class="comment">-- 监视对字段的访问/修改</span></div><div class="line">unwatch [access|all] &lt;类 ID&gt;.&lt;字段名&gt;</div><div class="line">                          <span class="comment">-- 停止监视对字段的访问/修改</span></div><div class="line">trace [go] methods [thread]</div><div class="line">                          <span class="comment">-- 跟踪方法的进入和退出。</span></div><div class="line">                          <span class="comment">-- 除非指定 'go'，否则所有线程都将暂停</span></div><div class="line">trace [go] method exit | exits [thread]</div><div class="line">                          <span class="comment">-- 跟踪当前方法的退出或所有方法的退出</span></div><div class="line">                          <span class="comment">-- 除非指定 'go'，否则所有线程都将暂停</span></div><div class="line">untrace [方法]         <span class="comment">-- 停止跟踪方法的进入和/或退出</span></div><div class="line">step                      <span class="comment">-- 执行当前行</span></div><div class="line">step up                   <span class="comment">-- 执行到当前方法返回其调用方</span></div><div class="line">stepi                     <span class="comment">-- 执行当前指令</span></div><div class="line">next                      <span class="comment">-- 跳过一行（跨过调用）</span></div><div class="line">cont                      <span class="comment">-- 从断点处继续执行</span></div><div class="line"></div><div class="line">list [<span class="built_in">line</span> <span class="built_in">number</span>|method] <span class="comment">-- 输出源代码</span></div><div class="line">use（或 sourcepath）[源文件路径]</div><div class="line">                          <span class="comment">-- 显示或更改源路径</span></div><div class="line">exclude [&lt;类模式&gt;, ...|“无”]</div><div class="line">                          <span class="comment">-- 不报告指定类的步骤或方法事件</span></div><div class="line">classpath                 <span class="comment">-- 从目标 VM 输出类路径信息</span></div><div class="line"></div><div class="line">monitor &lt;命令&gt;         <span class="comment">-- 每次程序停止时执行命令</span></div><div class="line">monitor                   <span class="comment">-- 列出监视器</span></div><div class="line">unmonitor &lt;监视器号&gt;      <span class="comment">-- 删除某个监视器</span></div><div class="line"><span class="built_in">read</span> &lt;文件名&gt;           <span class="comment">-- 读取并执行某个命令文件</span></div><div class="line"></div><div class="line">lock &lt;表达式&gt;               <span class="comment">-- 输出对象的锁信息</span></div><div class="line">threadlocks [线程 ID]   <span class="comment">-- 输出线程的锁信息</span></div><div class="line"></div><div class="line">pop                       <span class="comment">-- 弹出整个堆栈，且包含当前帧</span></div><div class="line">reenter                   <span class="comment">-- 与 pop 作用相同，但重新进入当前帧</span></div><div class="line">redefine &lt;类 ID&gt; &lt;类文件名&gt;</div><div class="line">                          <span class="comment">-- 重新定义类代码</span></div><div class="line"></div><div class="line">disablegc &lt;表达式&gt;          <span class="comment">-- 禁止对象的垃圾回收</span></div><div class="line">enablegc &lt;表达式&gt;           <span class="comment">-- 允许对象的垃圾回收</span></div><div class="line"></div><div class="line">!!                        <span class="comment">-- 重复执行最后一个命令</span></div><div class="line">&lt;n&gt; &lt;命令&gt;             <span class="comment">-- 将命令重复执行 n 次</span></div><div class="line"><span class="comment"># &lt;命令&gt;               -- 放弃（不执行）</span></div><div class="line">help（或 ?）               <span class="comment">-- 列出命令</span></div><div class="line"><span class="built_in">version</span>                   <span class="comment">-- 输出版本信息</span></div><div class="line">exit（或 quit）            <span class="comment">-- 退出调试器</span></div><div class="line"></div><div class="line">&lt;类 ID&gt;: 带有软件包限定符的完整类名</div><div class="line">&lt;类模式&gt;: 带有前导或后缀通配符 (*) 的类名</div><div class="line">&lt;线程 ID&gt;: <span class="string">'threads'</span> 命令中所报告的线程号</div><div class="line">&lt;表达式&gt;: Java(TM) 编程语言表达式。</div><div class="line">支持大多数常见语法。</div><div class="line"></div><div class="line">可以将启动命令置于 <span class="string">"jdb.ini"</span> 或 <span class="string">".jdbrc"</span> 之中</div><div class="line">（两者位于 user.home 或 user.dir 中）</div></pre></td></tr></table></figure>
<p>有关JDB的使用详细介绍请参考<a href="https://docs.oracle.com/javase/8/docs/technotes/tools/unix/jdb.html" target="_blank" rel="external">官方文档</a>。接下来我将用JDB调试Tomcat（以Tomcat7为例）下的应用来介绍下JDB的简单用法。</p>
<p>使用JDB进行调试，大概有下面几个步骤：</p>
<ol>
<li><p>在服务器上创建setenv.bat文件，并输入如下内容，并将该文件放在Tomcat安装目录的bin目录下，并重启Tomcat；</p>
 <figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">set</span> CATALINA_OPTS=<span class="string">"-agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=n"</span></div></pre></td></tr></table></figure>
</li>
<li><p>将应用系统的源码解压至某一目录，如src_dir1与src_dir2</p>
</li>
<li>在CLI下输入以下命令连接至服务器上的Tomcat <figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jdb -connect com<span class="selector-class">.sun</span><span class="selector-class">.jdi</span><span class="selector-class">.SocketAttach</span>:hostname=localhost,port=<span class="number">8787</span>,timeout=<span class="number">3000</span> -sourcepath src_dir1:src_dir2</div></pre></td></tr></table></figure>
</li>
</ol>
<p>这样就可以进入JDB的DEBUG环境了，你可以通过stop命令创建断点，通过next命令单行调试，通过step命令单步调试，通过step up命令返回至上层调用点等，具体使用网上一堆参考资料。</p>
<blockquote>
<p>转载请注明出处：<a href="http://cloudnoter.com">cloudnoter.com</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码调试是大家在日常应用开发定位BUG时会经常使用的技能。然而在客户生产环境下，一没有开发环境，二没有外网连接，如果此时应用出问题，而通过日志又无法定位时，该怎么办呢？&lt;/p&gt;
&lt;p&gt;也许有人会按如下步骤来定位问题（假设BUG可复现且客户允许应用服务重启）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在本地可能出问题的相关代码中添加许多的日志信息，以将应用运行状态打印出来。&lt;/li&gt;
&lt;li&gt;打包并部署至客户现场环境&lt;/li&gt;
&lt;li&gt;复现BUG并查看日志信息并最终解决问题&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其实JDK中提供的JDB是一个更加理想现场调试工具，其包含的命令列表如下：&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://cloudnoter.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://cloudnoter.com/tags/Java/"/>
    
      <category term="JDB" scheme="http://cloudnoter.com/tags/JDB/"/>
    
  </entry>
  
  <entry>
    <title>PhpStorm+Laravel_5.1开发环境搭建</title>
    <link href="http://cloudnoter.com/2016/01/12/PhpStorm-Laravel-5-1%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://cloudnoter.com/2016/01/12/PhpStorm-Laravel-5-1开发环境搭建/</id>
    <published>2016-01-12T00:26:13.000Z</published>
    <updated>2017-04-29T06:09:01.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>参数文档：<a href="https://confluence.jetbrains.com/display/PhpStorm/Laravel+Development+using+PhpStorm" target="_blank" rel="external">Laravel Development using PhpStorm</a></p>
</blockquote>
<ol>
<li>在PhpStorm + Laravel5.1下无法为artisan创建【command line tool support】问题</li>
</ol>
<p><strong>现象</strong>：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Problem</div><div class="line">Failed <span class="keyword">to</span> parse output <span class="keyword">as</span> xml: Error <span class="keyword">on</span> line <span class="number">4</span>: Content <span class="keyword">is</span> <span class="keyword">not</span> allowed <span class="keyword">in</span> prolog..</div><div class="line">Command</div><div class="line">php.exe C:\Users\Maxim.Kolmakov\PhpstormProjects\Laravel<span class="number">-5</span>\artisan <span class="built_in">list</span> <span class="comment">--xml</span></div><div class="line">Output                                                                               </div><div class="line">  [ErrorException]                                                             </div><div class="line">  The <span class="comment">--xml option was deprecated in version 2.7 and will be removed in versi  </span></div><div class="line">  <span class="keyword">on</span> <span class="number">3.0</span>. Use <span class="keyword">the</span> <span class="comment">--format option instead.</span></div></pre></td></tr></table></figure></p>
<p><strong>原因</strong>：<br>Laravel 5.1版的Artisan的命令行的xml标志位已经被删除，详见Symfony的<a href="https://github.com/symfony/console/commit/6d6d9031b9148fed0e2aacb98ac23ce6168ba7ac" target="_blank" rel="external">Git提交记录</a>。</p>
<p><strong>解决办法</strong>：2种</p>
<ul>
<li>将Laravel降级为5.0版本</li>
<li>到目录[项目根目录]/vendor/symfony/console/Command下将如下两个文件还原回去：<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">HelpCommand</span><span class="selector-class">.php</span></div><div class="line"><span class="selector-tag">ListCommand</span><span class="selector-class">.php</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>2.<a href="https://github.com/koomai/phpstorm-laravel-live-templates" target="_blank" rel="external">phpstorm laravel live template</a></p>
<blockquote>
<p>转载请注明出处：<a href="http://cloudnoter.com">cloudnoter.com</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;参数文档：&lt;a href=&quot;https://confluence.jetbrains.com/display/PhpStorm/Laravel+Development+using+PhpStorm&quot; target=&quot;_blank&quot; rel=&quot;ext
    
    </summary>
    
      <category term="Php" scheme="http://cloudnoter.com/categories/Php/"/>
    
    
      <category term="php" scheme="http://cloudnoter.com/tags/php/"/>
    
      <category term="laravel" scheme="http://cloudnoter.com/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>嵌套删除SQL引起的死锁问题分析</title>
    <link href="http://cloudnoter.com/2015/12/20/%E5%B5%8C%E5%A5%97%E5%88%A0%E9%99%A4SQL%E5%BC%95%E8%B5%B7%E7%9A%84%E6%AD%BB%E9%94%81%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/"/>
    <id>http://cloudnoter.com/2015/12/20/嵌套删除SQL引起的死锁问题分析/</id>
    <published>2015-12-19T18:03:53.000Z</published>
    <updated>2017-04-29T06:10:11.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h1><p>应用系统后台有两个计划任务</p>
<ul>
<li>每天1：00定时删除N天前的计划日志表数据</li>
<li><p>每隔5分钟统计AP终端在线用户数并更新计划日志表某一条记录的状态</p>
<a id="more"></a>
<h1 id="错误日志"><a href="#错误日志" class="headerlink" title="错误日志"></a>错误日志</h1><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">------------------------</div><div class="line">LATEST DETECTED DEADLOCK</div><div class="line">------------------------</div><div class="line">150914  3:00:12</div><div class="line">*** (1) TRANSACTION:</div><div class="line">TRANSACTION 209F80FE, ACTIVE 2 sec starting <span class="keyword">index</span> read</div><div class="line">mysql tables <span class="keyword">in</span> <span class="keyword">use</span> <span class="number">1</span>, locked <span class="number">1</span></div><div class="line">LOCK WAIT <span class="number">2</span> lock struct(s), heap size <span class="number">320</span>, <span class="number">1</span> row lock(s)</div><div class="line">MySQL thread id <span class="number">241534</span>, OS thread handle <span class="number">0x2e5c</span>, query id <span class="number">2220277302</span> localhost <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> root Updating</div><div class="line"><span class="keyword">UPDATE</span> T_BATCH_JOB_EXECUTION <span class="keyword">set</span> START_TIME = <span class="string">'2015-09-14 03:00:06'</span>, END_TIME = <span class="string">'2015-09-14 03:00:10'</span>,  STATUS = <span class="string">'COMPLETED'</span>, CONTINUABLE = <span class="string">'N'</span>, EXIT_CODE = <span class="string">'COMPLETED'</span>, EXIT_MESSAGE = <span class="string">''</span>, VERSION = <span class="number">4</span>, CREATE_TIME = <span class="string">'2015-09-14 03:00:06'</span> <span class="keyword">where</span> JOB_EXECUTION_ID = <span class="number">435431</span></div><div class="line">*** (<span class="number">1</span>) WAITING <span class="keyword">FOR</span> THIS LOCK <span class="keyword">TO</span> BE GRANTED:</div><div class="line">RECORD LOCKS space id <span class="number">101740</span> page no <span class="number">388</span> n bits <span class="number">240</span> <span class="keyword">index</span> <span class="symbol">`PRIMARY`</span> of table <span class="symbol">`emp`</span>.<span class="symbol">`t_batch_job_execution`</span> trx id <span class="number">209</span>F80FE lock_mode X locks rec but <span class="keyword">not</span> gap waiting</div><div class="line"></div><div class="line">*** (<span class="number">2</span>) <span class="keyword">TRANSACTION</span>:</div><div class="line"><span class="keyword">TRANSACTION</span> <span class="number">209</span>F7560, ACTIVE <span class="number">7</span> sec fetching rows, thread declared inside InnoDB <span class="number">130</span></div><div class="line">mysql tables <span class="keyword">in</span> <span class="keyword">use</span> <span class="number">2</span>, locked <span class="number">2</span></div><div class="line"><span class="number">1108</span> lock struct(s), heap size <span class="number">77120</span>, <span class="number">52179</span> row lock(s), undo <span class="built_in">log</span> entries <span class="number">7455</span></div><div class="line">MySQL thread id <span class="number">235617</span>, OS thread handle <span class="number">0xf10</span>, query id <span class="number">2220277303</span> localhost <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> root preparing</div><div class="line"><span class="keyword">delete</span> <span class="keyword">from</span> t_batch_job_execution <span class="keyword">where</span> job_instance_id <span class="keyword">in</span> (<span class="keyword">select</span> id <span class="keyword">from</span> t_batch_plan_execution <span class="keyword">where</span> due_time &lt;= <span class="string">'2015-09-07 00:00:00'</span> )</div><div class="line">*** (<span class="number">2</span>) HOLDS THE LOCK(S):</div><div class="line">RECORD LOCKS space id <span class="number">101740</span> page no <span class="number">388</span> n bits <span class="number">240</span> <span class="keyword">index</span> <span class="symbol">`PRIMARY`</span> of table <span class="symbol">`emp`</span>.<span class="symbol">`t_batch_job_execution`</span> trx id <span class="number">209</span>F7560 lock mode S locks rec but <span class="keyword">not</span> gap</div><div class="line"></div><div class="line">*** (<span class="number">2</span>) WAITING <span class="keyword">FOR</span> THIS LOCK <span class="keyword">TO</span> BE GRANTED:</div><div class="line">RECORD LOCKS space id <span class="number">101740</span> page no <span class="number">388</span> n bits <span class="number">240</span> <span class="keyword">index</span> <span class="symbol">`PRIMARY`</span> of table <span class="symbol">`emp`</span>.<span class="symbol">`t_batch_job_execution`</span> trx id <span class="number">209</span>F7560 lock_mode X locks rec but <span class="keyword">not</span> gap waiting</div><div class="line"></div><div class="line"></div><div class="line">*** WE ROLL BACK <span class="keyword">TRANSACTION</span> (<span class="number">1</span>)</div></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h1><ol>
<li>mysql在执行【delete from T where … in select … from K …】的SQL时，会对K表的查询结果集添加共享锁【S锁】，以防止SQL执行过程中其它事务对K表进行变更操作，最终影响查询结果。可参考<a href="http://dev.mysql.com/doc/refman/5.7/en/innodb-locks-set.html" target="_blank" rel="external">InnoDB存储引擎SQL语句加锁类型分析</a></li>
<li>【事务2】为”系统日志删除计划任务”，该事务涉及多个DELETE SQL，其中<figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">delete</span> <span class="keyword">from</span> t_batch_step_execution <span class="keyword">where</span> job_execution_id <span class="keyword">in</span> </div><div class="line">(</div><div class="line"><span class="keyword">select</span> job_execution_id <span class="keyword">from</span> t_batch_job_execution <span class="keyword">as</span> job, t_batch_plan_execution <span class="keyword">as</span> exec <span class="keyword">where</span> job.job_instance_id = exec.id <span class="keyword">and</span> exec.due_time &lt;= ? </div><div class="line">)</div></pre></td></tr></table></figure>
</li>
</ol>
<p>会导致t_batch_job_execution表的某些记录被加上S锁，可从死锁日志中得到验证<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">*** (2) HOLDS THE LOCK(S):RECORD LOCKS space id 101740 page no 388 n bits 240 <span class="keyword">index</span> <span class="symbol">`PRIMARY`</span> of table <span class="symbol">`emp`</span>.<span class="symbol">`t_batch_job_execution`</span> trx id <span class="number">209</span>F7560 lock mode S locks rec but <span class="keyword">not</span> gap</div></pre></td></tr></table></figure></p>
<ol>
<li>【事务1】的”5分钟终端统计任务”的SQL<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">UPDATE</span> T_BATCH_JOB_EXECUTION <span class="keyword">set</span> START_TIME = <span class="string">'2015-09-14 03:00:06'</span>, END_TIME = <span class="string">'2015-09-14 03:00:10'</span>,  <span class="keyword">STATUS</span> = <span class="string">'COMPLETED'</span>, CONTINUABLE = <span class="string">'N'</span>, EXIT_CODE = <span class="string">'COMPLETED'</span>, EXIT_MESSAGE = <span class="string">''</span>, <span class="keyword">VERSION</span> = <span class="number">4</span>, CREATE_TIME = <span class="string">'2015-09-14 03:00:06'</span> <span class="keyword">where</span> JOB_EXECUTION_ID = <span class="number">435431</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>需要对T_BATCH_JOB_EXECUTION表指定行申请加上排它锁【X锁】；在加【X锁】前，INNODB存储引擎会先隐式申请该行的意向排它锁【IX锁】；由于该行已经被【事务2】加上【S锁】，但是【IX锁】与【S锁】是兼容的，因此【事务1】对该行加【IX锁】成功，而【X锁】与【S锁】会冲突，因此【事务1】就处于等待【X锁】状态，可从死锁日志得到验证<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">*** (1) WAITING FOR THIS LOCK TO BE GRANTED:RECORD LOCKS space id 101740 page no 388 n bits 240 <span class="keyword">index</span> <span class="symbol">`PRIMARY`</span> of table <span class="symbol">`emp`</span>.<span class="symbol">`t_batch_job_execution`</span> trx id <span class="number">209</span>F80FE lock_mode X locks rec but <span class="keyword">not</span> gap waiting</div></pre></td></tr></table></figure></p>
<ol>
<li>【事务2】接下来执行SQL<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">delete</span> <span class="keyword">from</span> t_batch_job_execution <span class="keyword">where</span> job_instance_id <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> t_batch_plan_execution <span class="keyword">where</span> due_time &lt;= ? )</div></pre></td></tr></table></figure>
</li>
</ol>
<p>需要申请【IX琐】(原理同上)、【X琐】,而由于指定行此时已经被【事务1】加上【IX锁】，由于而【IX锁】与【X锁】会冲突，因此【事务2】就处理申请等待【X锁】的状态，可从死锁日志得到验证<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">*** (2) WAITING FOR THIS LOCK TO BE GRANTED:RECORD LOCKS space id 101740 page no 388 n bits 240 <span class="keyword">index</span> <span class="symbol">`PRIMARY`</span> of table <span class="symbol">`emp`</span>.<span class="symbol">`t_batch_job_execution`</span> trx id <span class="number">209</span>F7560 lock_mode X locks rec but <span class="keyword">not</span> gap waiting</div></pre></td></tr></table></figure></p>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>对”系统日志删除计划任务”的相关SQL进行拆分，避免出现S锁的现象，即将<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">delete</span> <span class="keyword">from</span> t_batch_step_execution <span class="keyword">where</span> job_execution_id <span class="keyword">in</span> (<span class="keyword">select</span> job_execution_id <span class="keyword">from</span> t_batch_job_execution <span class="keyword">as</span> job, t_batch_plan_execution <span class="keyword">as</span> exec <span class="keyword">where</span> job.job_instance_id = exec.id <span class="keyword">and</span> exec.due_time &lt;= ? )</div></pre></td></tr></table></figure></p>
<p>拆分为两个SQL：<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1. <span class="keyword">select</span> job_execution_id <span class="keyword">from</span> t_batch_job_execution <span class="keyword">as</span> job, t_batch_plan_execution <span class="keyword">as</span> exec <span class="keyword">where</span> job.job_instance_id = exec.id <span class="keyword">and</span> exec.due_time &lt;= ? </div><div class="line"><span class="number">2.</span> <span class="keyword">delete</span> <span class="keyword">from</span> t_batch_step_execution <span class="keyword">where</span> job_execution_id <span class="keyword">in</span> ( ? )</div></pre></td></tr></table></figure></p>
<p>可以这样拆分的原因为：系统日志删除任务主要是删除N天前的数据，子查询的结果在短时间内是不会变化的。</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol>
<li><a href="http://hedengcheng.com/?p=771" target="_blank" rel="external">MySQL加锁处理分析</a></li>
</ol>
<blockquote>
<p>转载请注明出处：<a href="http://cloudnoter.com">cloudnoter.com</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;问题背景&quot;&gt;&lt;a href=&quot;#问题背景&quot; class=&quot;headerlink&quot; title=&quot;问题背景&quot;&gt;&lt;/a&gt;问题背景&lt;/h1&gt;&lt;p&gt;应用系统后台有两个计划任务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每天1：00定时删除N天前的计划日志表数据&lt;/li&gt;
&lt;li&gt;&lt;p&gt;每隔5分钟统计AP终端在线用户数并更新计划日志表某一条记录的状态&lt;/p&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://cloudnoter.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://cloudnoter.com/tags/MySQL/"/>
    
      <category term="DeadLock" scheme="http://cloudnoter.com/tags/DeadLock/"/>
    
  </entry>
  
  <entry>
    <title>历史文章</title>
    <link href="http://cloudnoter.com/2015/12/20/%E5%8E%86%E5%8F%B2%E6%96%87%E7%AB%A0/"/>
    <id>http://cloudnoter.com/2015/12/20/历史文章/</id>
    <published>2015-12-19T18:00:29.000Z</published>
    <updated>2017-04-29T06:09:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>说来惭愧，工作这么5年多，就只在CSDN上写了几个字，这些文章主要是学习笔记：<a href="http://blog.csdn.net/cza55007" target="_blank" rel="external">CSDN上的文章</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;说来惭愧，工作这么5年多，就只在CSDN上写了几个字，这些文章主要是学习笔记：&lt;a href=&quot;http://blog.csdn.net/cza55007&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSDN上的文章&lt;/a&gt;&lt;/p&gt;

    
    </summary>
    
      <category term="Others" scheme="http://cloudnoter.com/categories/Others/"/>
    
    
  </entry>
  
</feed>
